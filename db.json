{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/material/source/css/gallery.min.css","path":"css/gallery.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/duoshuo.css","path":"css/duoshuo.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/duoshuo.min.css","path":"css/duoshuo.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/ie-blocker.css","path":"css/ie-blocker.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/uc.css","path":"css/uc.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","path":"fonts/MaterialIcons-Regular.woff","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","path":"fonts/MaterialIcons-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/material/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/bg.png","path":"img/bg.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/daily_pic.jpg","path":"img/daily_pic.jpg","modified":0,"renderable":1},{"_id":"themes/material/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/sidebar_header.png","path":"img/sidebar_header.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/upyun_logo.png","path":"img/upyun_logo.png","modified":0,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.en.js","path":"js/ie-blocker.en.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","path":"js/ie-blocker.zhCN.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/smoothscroll.js","path":"js/smoothscroll.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/nprogress.js","path":"js/nprogress.js","modified":0,"renderable":1},{"_id":"themes/material/source/css/material.min.css","path":"css/material.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","path":"fonts/MaterialIcons-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/material/source/img/daily_pic.png","path":"img/daily_pic.png","modified":0,"renderable":1},{"_id":"themes/material/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/js.js","path":"js/js.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/js.min.js","path":"js/js.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/agate.css","path":"css/highlight/agate.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/androidstudio.css","path":"css/highlight/androidstudio.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/arduino-light.css","path":"css/highlight/arduino-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/arta.css","path":"css/highlight/arta.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/ascetic.css","path":"css/highlight/ascetic.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-cave-dark.css","path":"css/highlight/atelier-cave-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-cave-light.css","path":"css/highlight/atelier-cave-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-dune-dark.css","path":"css/highlight/atelier-dune-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-dune-light.css","path":"css/highlight/atelier-dune-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-estuary-dark.css","path":"css/highlight/atelier-estuary-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-estuary-light.css","path":"css/highlight/atelier-estuary-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-forest-dark.css","path":"css/highlight/atelier-forest-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-forest-light.css","path":"css/highlight/atelier-forest-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-heath-dark.css","path":"css/highlight/atelier-heath-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-heath-light.css","path":"css/highlight/atelier-heath-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-lakeside-dark.css","path":"css/highlight/atelier-lakeside-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-lakeside-light.css","path":"css/highlight/atelier-lakeside-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-plateau-dark.css","path":"css/highlight/atelier-plateau-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-plateau-light.css","path":"css/highlight/atelier-plateau-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-savanna-dark.css","path":"css/highlight/atelier-savanna-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-savanna-light.css","path":"css/highlight/atelier-savanna-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-seaside-dark.css","path":"css/highlight/atelier-seaside-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-seaside-light.css","path":"css/highlight/atelier-seaside-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-sulphurpool-dark.css","path":"css/highlight/atelier-sulphurpool-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atelier-sulphurpool-light.css","path":"css/highlight/atelier-sulphurpool-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atom-one-dark.css","path":"css/highlight/atom-one-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/atom-one-light.css","path":"css/highlight/atom-one-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/brown-paper.css","path":"css/highlight/brown-paper.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/codepen-embed.css","path":"css/highlight/codepen-embed.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/color-brewer.css","path":"css/highlight/color-brewer.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/dark.css","path":"css/highlight/dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/darcula.css","path":"css/highlight/darcula.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/darkula.css","path":"css/highlight/darkula.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/docco.css","path":"css/highlight/docco.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/dracula.css","path":"css/highlight/dracula.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/far.css","path":"css/highlight/far.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/foundation.css","path":"css/highlight/foundation.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/github-gist.css","path":"css/highlight/github-gist.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/github.css","path":"css/highlight/github.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/googlecode.css","path":"css/highlight/googlecode.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/grayscale.css","path":"css/highlight/grayscale.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/gruvbox-dark.css","path":"css/highlight/gruvbox-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/gruvbox-light.css","path":"css/highlight/gruvbox-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/hopscotch.css","path":"css/highlight/hopscotch.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/hybrid.css","path":"css/highlight/hybrid.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/idea.css","path":"css/highlight/idea.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/ir-black.css","path":"css/highlight/ir-black.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/kimbie.dark.css","path":"css/highlight/kimbie.dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/kimbie.light.css","path":"css/highlight/kimbie.light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/magula.css","path":"css/highlight/magula.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/mono-blue.css","path":"css/highlight/mono-blue.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/monokai-sublime.css","path":"css/highlight/monokai-sublime.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/monokai.css","path":"css/highlight/monokai.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/obsidian.css","path":"css/highlight/obsidian.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/ocean.css","path":"css/highlight/ocean.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/paraiso-dark.css","path":"css/highlight/paraiso-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/paraiso-light.css","path":"css/highlight/paraiso-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/pojoaque.css","path":"css/highlight/pojoaque.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/purebasic.css","path":"css/highlight/purebasic.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/qtcreator_dark.css","path":"css/highlight/qtcreator_dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/qtcreator_light.css","path":"css/highlight/qtcreator_light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/railscasts.css","path":"css/highlight/railscasts.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/rainbow.css","path":"css/highlight/rainbow.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/school-book.css","path":"css/highlight/school-book.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/solarized-dark.css","path":"css/highlight/solarized-dark.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/solarized-light.css","path":"css/highlight/solarized-light.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/solarized-white.css","path":"css/highlight/solarized-white.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/sunburst.css","path":"css/highlight/sunburst.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/tomorrow-night-blue.css","path":"css/highlight/tomorrow-night-blue.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/tomorrow-night-bright.css","path":"css/highlight/tomorrow-night-bright.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/tomorrow-night-eighties.css","path":"css/highlight/tomorrow-night-eighties.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/tomorrow-night.css","path":"css/highlight/tomorrow-night.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/tomorrow.css","path":"css/highlight/tomorrow.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/vs.css","path":"css/highlight/vs.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/xcode.css","path":"css/highlight/xcode.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/xt256.css","path":"css/highlight/xt256.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/highlight/zenburn.css","path":"css/highlight/zenburn.css","modified":0,"renderable":1},{"_id":"themes/material/source/css/material.css","path":"css/material.css","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","path":"fonts/MaterialIcons-Regular.eot","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.png","path":"img/footer/footer_ico-bilibili.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-facebook.png","path":"img/footer/footer_ico-facebook.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-coding.png","path":"img/footer/footer_ico-coding.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-github.png","path":"img/footer/footer_ico-github.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-gplus.png","path":"img/footer/footer_ico-gplus.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-instagram.png","path":"img/footer/footer_ico-instagram.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.png","path":"img/footer/footer_ico-linkedin.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-telegram.png","path":"img/footer/footer_ico-telegram.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.png","path":"img/footer/footer_ico-tumblr.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-twitter.png","path":"img/footer/footer_ico-twitter.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-weibo.png","path":"img/footer/footer_ico-weibo.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.png","path":"img/footer/footer_ico-zhihu.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/arrow.svg","path":"img/gallery/arrow.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/close.svg","path":"img/gallery/close.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/gallery/spinner.svg","path":"img/gallery/spinner.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-1.png","path":"img/random/material-1.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-2.png","path":"img/random/material-2.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-4.png","path":"img/random/material-4.png","modified":0,"renderable":1},{"_id":"themes/material/source/js/gallery/jquery.poptrox.min.js","path":"js/gallery/jquery.poptrox.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/gallery/main.min.js","path":"js/gallery/main.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/gallery/skel.min.js","path":"js/gallery/skel.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/js/gallery/util.min.js","path":"js/gallery/util.min.js","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-13.png","path":"img/random/material-13.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-15.png","path":"img/random/material-15.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-16.png","path":"img/random/material-16.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-17.png","path":"img/random/material-17.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-3.png","path":"img/random/material-3.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-6.png","path":"img/random/material-6.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-10.png","path":"img/random/material-10.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-12.png","path":"img/random/material-12.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-9.png","path":"img/random/material-9.png","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-11.png","path":"img/random/material-11.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-19.png","path":"img/random/material-19.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-8.png","path":"img/random/material-8.png","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","path":"fonts/Roboto-Black.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","path":"fonts/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","path":"fonts/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","path":"fonts/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","path":"fonts/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","path":"fonts/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-7.png","path":"img/random/material-7.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-18.png","path":"img/random/material-18.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-5.png","path":"img/random/material-5.png","modified":0,"renderable":1},{"_id":"themes/material/source/img/random/material-14.png","path":"img/random/material-14.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/material/.gitignore","hash":"b10b1e6b53106a182506d771bc2c405b0245a0c9","modified":1485603302050},{"_id":"themes/material/.travis.yml","hash":"639b4687fa0c080b419405136a5081603a83b6c0","modified":1485603302053},{"_id":"themes/material/LICENSE","hash":"2ea9f02239dc6b5fdbfff01fcdf85bcc8c13667c","modified":1485603302056},{"_id":"themes/material/README.md","hash":"5a91c828e5d0c8c1be4c67653195e911e6f42c95","modified":1485603302058},{"_id":"themes/material/_config.yml","hash":"7958db84ecefd7ba1157ad2a447feeced2ba4ba2","modified":1485755285000},{"_id":"themes/material/contributing.json","hash":"f6f039672fef8e0267d9586c73d1a425c6c882d8","modified":1485603302062},{"_id":"themes/material/lint.sh","hash":"b082677c539a554f3ba9435e9569b7257610c08a","modified":1485603302250},{"_id":"themes/material/package.json","hash":"ef6da09bbf3e331e9de1a3e20131cbb935e39fc9","modified":1485603302252},{"_id":"source/_posts/Axios的配置.md","hash":"124b5436efc9507a1475e432cbf75afe6bf6f032","modified":1485939636422},{"_id":"source/_posts/Vuex2与Axios开发.md","hash":"9f2894e7cbac535fdd85ba2f8f52a82043d6fa45","modified":1485941886046},{"_id":"source/_posts/hello.md","hash":"877618078a33cdbfaff3bc6a6a7ccbe20200af59","modified":1485756525535},{"_id":"themes/material/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1485603301968},{"_id":"themes/material/.git/COMMIT_EDITMSG","hash":"acb7b241ea842c5107d065f39d00f33eb0fb25c9","modified":1485655478274},{"_id":"themes/material/.git/config","hash":"7f8f7c4b6a720242e67dcf733b8111edbdb7f889","modified":1485603301998},{"_id":"themes/material/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1485603044616},{"_id":"themes/material/.git/index","hash":"a26b1745c1723dc6dd9f7a2d0f60d73df5f98d1c","modified":1485655478268},{"_id":"themes/material/.git/packed-refs","hash":"b0241d72c811754a2ae359b5ba5f15d8a61ffed7","modified":1485603301939},{"_id":"themes/material/.github/ISSUE_TEMPLATE.md","hash":"db9ad5beabfa2b941f228b64df3e9f078579647d","modified":1485603302030},{"_id":"themes/material/.github/PULL_REQUEST_TEMPLATE.md","hash":"89a30224fc7403ebb9206ac8eb9bb25c3561d253","modified":1485603302033},{"_id":"themes/material/languages/ar.yml","hash":"165e0430a3da3c5882b5f3ca5e098a09f70a909d","modified":1485603302065},{"_id":"themes/material/languages/en.yml","hash":"b940600c889b0b722ec7f12322858572360e898e","modified":1485603302069},{"_id":"themes/material/languages/de.yml","hash":"379e03591ebeeaab42f8588ab05e897ba7b2e68c","modified":1485603302067},{"_id":"themes/material/languages/es.yml","hash":"0d72be17279100cb4c96da41945d7d8351fa0255","modified":1485603302071},{"_id":"themes/material/languages/fr.yml","hash":"00332d7dd371b118f52e46f65256eb3c10ecd17d","modified":1485603302073},{"_id":"themes/material/languages/ms.yml","hash":"5bf0268854ba1f8940392e80a92c8e6b0db0cbcd","modified":1485603302077},{"_id":"themes/material/languages/ja.yml","hash":"0733638e6dfa2bdf6238d2410ab5d4f76227e7cf","modified":1485603302075},{"_id":"themes/material/languages/zh-CN.yml","hash":"af9c232284013a5ae9f84fb9ea62ac82373a108d","modified":1485603302079},{"_id":"themes/material/languages/zh-TW.yml","hash":"5a445321470a404e801f8b4faa89b0b9989a052c","modified":1485603302081},{"_id":"themes/material/layout/index.ejs","hash":"6d2452593a818992e530916d610b12cf1a82cab2","modified":1485603302241},{"_id":"themes/material/layout/layout.ejs","hash":"6e7163bb7c2db095aa5c751f5abb0dffba42356b","modified":1485603302242},{"_id":"themes/material/layout/post.ejs","hash":"1ca0ec79e39e47bd3c0db59238fc59187db37a7d","modified":1485603302247},{"_id":"themes/material/layout/_partial/Isolation-post-info.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1485603302086},{"_id":"themes/material/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1485603044619},{"_id":"themes/material/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1485603044620},{"_id":"themes/material/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1485603044622},{"_id":"themes/material/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1485603044624},{"_id":"themes/material/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1485603044625},{"_id":"themes/material/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1485603044627},{"_id":"themes/material/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1485603044628},{"_id":"themes/material/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1485603044630},{"_id":"themes/material/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1485603044632},{"_id":"themes/material/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1485603044633},{"_id":"themes/material/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1485603044636},{"_id":"themes/material/.git/logs/HEAD","hash":"d555eaf651a455530a3bb7fa73c28e52a3848695","modified":1485655478282},{"_id":"themes/material/layout/_partial/Isolation-post_entry.ejs","hash":"b836eedd4881575000f57b7a6e58b7e6ac48d0eb","modified":1485603302089},{"_id":"themes/material/layout/_partial/Paradox-post-info.ejs","hash":"c1ea5ebbdbc44f363891753e7bb78bdb707e197f","modified":1485603302096},{"_id":"themes/material/layout/_partial/Paradox-post-thumbnail.ejs","hash":"4c12ceb81c83fed5f7e7e89dbde2af9d548a7837","modified":1485603302099},{"_id":"themes/material/layout/_partial/Paradox-post_entry-thumbnail.ejs","hash":"e904df50a90823f774e32b831455a01ee1d354e2","modified":1485603302102},{"_id":"themes/material/layout/_partial/Paradox-post_entry.ejs","hash":"08439ca843fb5bec3ab48e9a6baf02d212ff2132","modified":1485603302105},{"_id":"themes/material/layout/_partial/Paradox-search.ejs","hash":"a53365c8a50db079eb6602350aa3f53d3712797d","modified":1485603302107},{"_id":"themes/material/layout/_partial/blog_info.ejs","hash":"6eb3bed89ad5853dbc10056f8c57a5ecf4cbd437","modified":1485603302110},{"_id":"themes/material/layout/_partial/comment.ejs","hash":"82fa342d7fe4c02bdb417a75300a4860e93cd551","modified":1485603302118},{"_id":"themes/material/layout/_partial/config_css.ejs","hash":"0b032f47c7a3abbcdeee712ab61844981bb4c831","modified":1485603302122},{"_id":"themes/material/layout/_partial/daily_pic.ejs","hash":"ee75b08a39761aa5a25616ffbabb4ce9eb4850d6","modified":1485603302131},{"_id":"themes/material/layout/_partial/footer-left.ejs","hash":"780e45a9c4da646bdf72669586e15674e08ee281","modified":1485740720856},{"_id":"themes/material/layout/_partial/footer-option.ejs","hash":"fb12a47eb350954274982dffc4a221454e4a0fe1","modified":1485603302142},{"_id":"themes/material/layout/_partial/footer.ejs","hash":"08b37548a1dccf671289c642ad43b24e37a78c5a","modified":1485603302145},{"_id":"themes/material/layout/_partial/footer_top.ejs","hash":"eabe53e9d9341101be6529d6331c617864a59b0d","modified":1485603302147},{"_id":"themes/material/layout/_partial/head.ejs","hash":"8873959841d065d493882c87c409eaced5f39374","modified":1485603302150},{"_id":"themes/material/layout/_partial/import_js.ejs","hash":"1b9c0681f9a259f1431bc5bb2f97e0b8b45e2f83","modified":1485603302160},{"_id":"themes/material/layout/_partial/isolate-sns_list.ejs","hash":"74de1f8ef14b58c21eb7895e9c9b3f3080d40aa4","modified":1485603302163},{"_id":"themes/material/layout/_partial/isolate_info.ejs","hash":"81f47a927ca4ffebf7768aa63c59523a792990de","modified":1485603302168},{"_id":"themes/material/layout/_partial/nprogress.ejs","hash":"c3389daf95014d2e1e3537cd15baac014aa16d4b","modified":1485603302171},{"_id":"themes/material/layout/_partial/post-content.ejs","hash":"d93b04ae59602991368e940431cd4db266616a17","modified":1485603302174},{"_id":"themes/material/layout/_partial/post-header.ejs","hash":"6e9b69fcb444cfc369653d7062721c92b0c04a94","modified":1485603302176},{"_id":"themes/material/layout/_partial/post-info-share.ejs","hash":"05520fdd12408d6ab96dfbe9323faae9187dbd5d","modified":1485603302178},{"_id":"themes/material/layout/_partial/post-nav.ejs","hash":"6b514c951b2535a0c1d22224c06856588ba18026","modified":1485603302181},{"_id":"themes/material/layout/_partial/sidebar-footer.ejs","hash":"20acafaa1fddf22e1db0fad2fee95a3119c84122","modified":1485603302190},{"_id":"themes/material/layout/_partial/sidebar-header.ejs","hash":"b64ac5d04ddbe8a8c42b7aaf10e9fddec3a2e109","modified":1485603302194},{"_id":"themes/material/layout/_partial/sidebar-navigation.ejs","hash":"2fe70d9d7eb21c00a2e86fd389128388bb8c9c25","modified":1485603302195},{"_id":"themes/material/layout/_partial/sidebar-sponsor.ejs","hash":"4a0e5c9f0405a500057d70e1a7699f2151678f6e","modified":1485603302197},{"_id":"themes/material/layout/_partial/sidebar.ejs","hash":"5fa89113054ae63689ad0edd1092a4bfac8cdcdb","modified":1485603302202},{"_id":"themes/material/layout/_partial/toc_button.ejs","hash":"62cdda091d7901113bf32c58cc1e110908c3c135","modified":1485603302205},{"_id":"themes/material/layout/_widget/disqus.ejs","hash":"a57414d4b57e004c4753b7f793d3bc50b86b0d6d","modified":1485603302208},{"_id":"themes/material/layout/_widget/duoshuo.ejs","hash":"4c25bbc39b0a9955626039b7cab85654e2d3c887","modified":1485603302213},{"_id":"themes/material/layout/_widget/leancloud-like.ejs","hash":"5483f0c8b753e171400d9c27a585de6de890c8ba","modified":1485603302215},{"_id":"themes/material/layout/_widget/leancloud-views.ejs","hash":"69f5f3b2a9a2c84f0c8b424a412ef354cb0481a7","modified":1485603302217},{"_id":"themes/material/layout/_widget/leancloud-views_num.ejs","hash":"a5ce35f2a456dc424e09b7e105b8d789dfe008df","modified":1485603302221},{"_id":"themes/material/layout/_widget/mathjax.ejs","hash":"2bdb6a28eab0cbee9a95c0b6ee7ed2ea3795cd14","modified":1485603302226},{"_id":"themes/material/layout/_widget/page-gallery.ejs","hash":"8d4474d5c797a6fdececeecb946e993a19fe9a40","modified":1485603302228},{"_id":"themes/material/layout/_widget/page-links.ejs","hash":"ae562eea1b432e44927a999381c9c2c43d5c1cc4","modified":1485603302230},{"_id":"themes/material/layout/_widget/page-tagcloud.ejs","hash":"d080683e457fc9b5501d9c1d25b900cdcd4d147e","modified":1485603302232},{"_id":"themes/material/layout/_widget/search-local-js.ejs","hash":"353fe66ab5d5686f798d2a906a293341640db38b","modified":1485603302236},{"_id":"themes/material/layout/_widget/search-swiftype-js.ejs","hash":"ff3a8bebfaf298cd362b9bb13639bfacf4c8e380","modified":1485603302239},{"_id":"themes/material/source/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1485603302261},{"_id":"themes/material/source/css/duoshuo.css","hash":"7372200a8d019d4c368283de089d2e0481cb1de7","modified":1485603302257},{"_id":"themes/material/source/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1485603302259},{"_id":"themes/material/source/css/ie-blocker.css","hash":"121016e89d5f8b1f84f2e0a22da30f3c096de36e","modified":1485603302428},{"_id":"themes/material/source/css/uc.css","hash":"fdd08a03390256c5b89e38cad6e53228a49f02e1","modified":1485603302445},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1485603302461},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1485603302463},{"_id":"themes/material/source/img/avatar.png","hash":"67f44f4a29122341d6cb299489098821a47ce645","modified":1485605348623},{"_id":"themes/material/source/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1485603302572},{"_id":"themes/material/source/img/daily_pic.jpg","hash":"8f6052d803dce3f993d900c007a8525616fa10f7","modified":1485695742303},{"_id":"themes/material/source/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1485603302582},{"_id":"themes/material/source/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1485603302660},{"_id":"themes/material/source/img/sidebar_header.png","hash":"2cbc5ce550c4eac3d0590114f624c48a5fb98ab3","modified":1485607470000},{"_id":"themes/material/source/img/upyun_logo.png","hash":"aee4e90c4e2e72ef7036668c52dabcd8d028ee2f","modified":1485603302781},{"_id":"themes/material/source/js/ie-blocker.en.js","hash":"0bbd768e3be0081cf8d3fc3a9568c6a0f951ada7","modified":1485603302791},{"_id":"themes/material/source/js/highlight.min.js","hash":"e2959a551162dbea01307c72f7bd8d9d236b0cd0","modified":1485603302790},{"_id":"themes/material/source/js/ie-blocker.zhCN.js","hash":"198ffa1583343a5b5bf5e52afcfbff96fd0ef569","modified":1485603302793},{"_id":"themes/material/source/js/smoothscroll.js","hash":"53204da28f2ccfd4af92511969319c574da1f7b5","modified":1485603302811},{"_id":"themes/material/source/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1485603302808},{"_id":"themes/material/source/css/material.min.css","hash":"f3c8e6a9d94e6cad30c6628e1d732e6ee00d5fce","modified":1485603302437},{"_id":"themes/material/source/css/style.css","hash":"80f630335467f259dc992182c91e502eeb92101f","modified":1485603302440},{"_id":"themes/material/source/css/style.min.css","hash":"2460d86314e416338aa5ec6ec032be5d8e100581","modified":1485603302443},{"_id":"themes/material/source/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1485603302449},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1485603302458},{"_id":"themes/material/source/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1485603302534},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1485603302557},{"_id":"themes/material/source/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1485603302561},{"_id":"themes/material/source/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1485603302578},{"_id":"themes/material/source/js/jquery.min.js","hash":"d0c03f4b0c3b72172804cbc5d19e44b3a0a9a171","modified":1485603302795},{"_id":"themes/material/source/js/js.js","hash":"c8d49615327c38fd7d00dff47fdd0d52fb94ca4c","modified":1485603302798},{"_id":"themes/material/source/js/js.min.js","hash":"1113143e83eaad19f43e84f9e8782f8afa3c9e67","modified":1485603302803},{"_id":"themes/material/.git/objects/05/6cd9135ebe75cf0ee71a962cb51c3de5892634","hash":"0ad1a4db6e23d5ed312e913dc7657e32b02f7e05","modified":1485655478261},{"_id":"themes/material/.git/objects/0d/502b07815a6c4a6c87f8145b9052b30e253268","hash":"ddc1df5f96686d69441412d8f1ab479799a94c48","modified":1485655478259},{"_id":"themes/material/.git/objects/78/10a9f8b668c556538ca712e3104cc7ffc1db06","hash":"f348e19abb5f6e0498243a1ba9d4ea7b936a6fe9","modified":1485655477767},{"_id":"themes/material/.git/objects/16/abde42fc6b230bc4266d210c7952e6d8f1d52b","hash":"defecd743b75726fd3bd27d57f6b50e4f60a7858","modified":1485655477810},{"_id":"themes/material/.git/objects/4d/929475fa924832212401b8753df094257dc21b","hash":"491b6fd951654543b05ff000ab082be133af404a","modified":1485655477763},{"_id":"themes/material/.git/objects/84/ad9846e46d87007bd7b34e52eae5f7c0c0be6b","hash":"f7b6ff9ee77190544df59acb3aa09466de97bf52","modified":1485655477776},{"_id":"themes/material/.git/objects/a0/05f74dc41c69e75c7c9850270f1d220619393e","hash":"9fc3edbdb7a4dc519bf34024c8bb579e955a7d01","modified":1485655478267},{"_id":"themes/material/.git/objects/bc/01ee8794eba168ba15c02f928fecb627a8f1ac","hash":"a67430f32026e8566175b9f108cef78ee5c682ba","modified":1485655478264},{"_id":"themes/material/.git/objects/c4/9d7a85b86d1f7f553d0abc431b2b3a894c440a","hash":"b35a56cb922e647bc65e1fa7bb94c64f8b4b00a2","modified":1485655477804},{"_id":"themes/material/.git/objects/c6/48fef14d5f876475504f99fa922218ef7f9054","hash":"3f461ebc14d91d83507654ab76d3f149859c039a","modified":1485655477771},{"_id":"themes/material/.git/objects/e1/b932104cc2cdad905056ffa3ca79064aaad8f5","hash":"ce197c6e55644ae1cb4a7468d93d829180ee6cb7","modified":1485655478276},{"_id":"themes/material/.git/refs/heads/master","hash":"ce79ad6e3326db2daf6d1822a753d78c6911cb4e","modified":1485655478281},{"_id":"themes/material/source/css/highlight/agate.css","hash":"267d7a729d7106899d887940bd62f01a7f8810a8","modified":1485603302263},{"_id":"themes/material/source/css/highlight/androidstudio.css","hash":"bd1d92a769b5e54f65ed659be012a5da7b933f67","modified":1485603302265},{"_id":"themes/material/source/css/highlight/arduino-light.css","hash":"459a63e66124cf3db5fdcbd0b211199048d718d3","modified":1485603302267},{"_id":"themes/material/source/css/highlight/arta.css","hash":"0c83871a3be547414936f040d1b651796ed432e9","modified":1485603302270},{"_id":"themes/material/source/css/highlight/ascetic.css","hash":"1b3f8c010d93271fe0b8973b24a83cccb43d2ab5","modified":1485603302272},{"_id":"themes/material/source/css/highlight/atelier-cave-dark.css","hash":"0fe44a5e2e47a6d5f808f343be5e0ee38a157513","modified":1485603302273},{"_id":"themes/material/source/css/highlight/atelier-cave-light.css","hash":"8e8a3cd5611034e8cb1cf17ae598cb146feae0e5","modified":1485603302275},{"_id":"themes/material/source/css/highlight/atelier-dune-dark.css","hash":"371fbf41c919b2cf66dbd64db24fc9a9f270f0ca","modified":1485603302277},{"_id":"themes/material/source/css/highlight/atelier-dune-light.css","hash":"978c280fbb391ab34ec798ff63d27ccf0622ffc5","modified":1485603302279},{"_id":"themes/material/source/css/highlight/atelier-estuary-dark.css","hash":"6cd190c8e9645ec6cc3aa897f2076c9a2a65fbf4","modified":1485603302282},{"_id":"themes/material/source/css/highlight/atelier-estuary-light.css","hash":"eaf8d2305631471a5c69039f5f666ec7cdb0991e","modified":1485603302284},{"_id":"themes/material/source/css/highlight/atelier-forest-dark.css","hash":"8d9cece07b6ea31e01fec11987b42ffc5bfb8c3f","modified":1485603302286},{"_id":"themes/material/source/css/highlight/atelier-forest-light.css","hash":"cdfdc19fd6e33879b2212cf41d5159484d72b1ac","modified":1485603302288},{"_id":"themes/material/source/css/highlight/atelier-heath-dark.css","hash":"707c60a91e0390b4d481710e5cab28441b1a6d20","modified":1485603302290},{"_id":"themes/material/source/css/highlight/atelier-heath-light.css","hash":"9b034e416e989edba7d2c2fd57ed706dc2059c4e","modified":1485603302292},{"_id":"themes/material/source/css/highlight/atelier-lakeside-dark.css","hash":"6f9102332449833997b2e72e8658fb9de212bc48","modified":1485603302294},{"_id":"themes/material/source/css/highlight/atelier-lakeside-light.css","hash":"180699d969cb62743bc8e4cf4dc5b88ea1c6ed9b","modified":1485603302297},{"_id":"themes/material/source/css/highlight/atelier-plateau-dark.css","hash":"4d69e5501ec2a7b81810466837ec731a81590d4d","modified":1485603302298},{"_id":"themes/material/source/css/highlight/atelier-plateau-light.css","hash":"f8e768bd2b111a4dffb6100391b647f6d9b1f445","modified":1485603302301},{"_id":"themes/material/source/css/highlight/atelier-savanna-dark.css","hash":"3768ba3e44fc1038adb09ff3adfbe4c8d807c338","modified":1485603302304},{"_id":"themes/material/source/css/highlight/atelier-savanna-light.css","hash":"fd76c75ef1f1ab693ccd09e973204cc80dae18cd","modified":1485603302305},{"_id":"themes/material/source/css/highlight/atelier-seaside-dark.css","hash":"f44bb322aab7a93f0c52a39e878670b7d6c2a8b8","modified":1485603302307},{"_id":"themes/material/source/css/highlight/atelier-seaside-light.css","hash":"dd9657b37f5fd62a288972380193db4249bcdf96","modified":1485603302310},{"_id":"themes/material/source/css/highlight/atelier-sulphurpool-dark.css","hash":"f6dc59deaf5dc1a87229e207f18b0def15a235cd","modified":1485603302314},{"_id":"themes/material/source/css/highlight/atelier-sulphurpool-light.css","hash":"4783dd049a048c7858603984b61b5f7db920c44d","modified":1485603302315},{"_id":"themes/material/source/css/highlight/atom-one-dark.css","hash":"91671ed42c0ce1363843144a9666d34faddb7e27","modified":1485603302317},{"_id":"themes/material/source/css/highlight/atom-one-light.css","hash":"526e305a190476a2b28a244ca928aabdcc686c34","modified":1485603302319},{"_id":"themes/material/source/css/highlight/brown-paper.css","hash":"9a030da7dc781e1461b15186f2b01ea684ee9ad2","modified":1485603302321},{"_id":"themes/material/source/css/highlight/codepen-embed.css","hash":"a4ce8f56fa8ec5078f597db441ebeace6264a508","modified":1485603302323},{"_id":"themes/material/source/css/highlight/color-brewer.css","hash":"317e097d8b2e0fd3e7c64d97bb93caa8e9e23b9d","modified":1485603302324},{"_id":"themes/material/source/css/highlight/dark.css","hash":"d4b6d04ed87e2ef4fcd359052c0220b70060a0f3","modified":1485603302328},{"_id":"themes/material/source/css/highlight/darcula.css","hash":"243e56c3eca2c7234b125df3c9a882d984f89b8a","modified":1485603302326},{"_id":"themes/material/source/css/highlight/darkula.css","hash":"d004ba64216234a53c84fa55baefdc8b371bb4d9","modified":1485603302330},{"_id":"themes/material/source/css/highlight/docco.css","hash":"9495b22865033719a0701b8e3557a843611204db","modified":1485603302332},{"_id":"themes/material/source/css/highlight/dracula.css","hash":"896157dc66de96b3e8ac2c2d032ac1f79f42ac42","modified":1485603302334},{"_id":"themes/material/source/css/highlight/far.css","hash":"3c9b37b9d4f992042165069792ea373ce299fa31","modified":1485603302336},{"_id":"themes/material/source/css/highlight/foundation.css","hash":"b8f36a5621cc6043fbf3ba23915b6faa92b2e6ba","modified":1485603302338},{"_id":"themes/material/source/css/highlight/github-gist.css","hash":"26f7b67c3c0ad968daf23129c5706c797ce24284","modified":1485603302340},{"_id":"themes/material/source/css/highlight/github.css","hash":"6f28691831ef118939d2e109a205b425a5249b90","modified":1485603302343},{"_id":"themes/material/source/css/highlight/googlecode.css","hash":"8ea1780e834b7f40c962744cb4ef533f9b805f9b","modified":1485603302345},{"_id":"themes/material/source/css/highlight/grayscale.css","hash":"b2074d4f1ffa928a9948a9edecf8e4ec513999e6","modified":1485603302347},{"_id":"themes/material/source/css/highlight/gruvbox-dark.css","hash":"bfe2f24aef069669dc44dba54f14b0005667d700","modified":1485603302349},{"_id":"themes/material/source/css/highlight/gruvbox-light.css","hash":"4e5445d5eaa82f1787e91682e544fea3be3b4bb9","modified":1485603302355},{"_id":"themes/material/source/css/highlight/hopscotch.css","hash":"1043cccf681b3c58b54dc044e2fcaeb409cdbda1","modified":1485603302357},{"_id":"themes/material/source/css/highlight/hybrid.css","hash":"c1cf52abb1248498794739cea51d6ecbd7539c69","modified":1485603302360},{"_id":"themes/material/source/css/highlight/idea.css","hash":"cfdc18180d926095d8322f36f041a2cf43445eef","modified":1485603302361},{"_id":"themes/material/source/css/highlight/ir-black.css","hash":"c8ee27f6873ee1e52c394b373bc8be49d059a46c","modified":1485603302363},{"_id":"themes/material/source/css/highlight/kimbie.dark.css","hash":"8fb1f4307f136010545bb095fd9a4bd298bd9dee","modified":1485603302365},{"_id":"themes/material/source/css/highlight/kimbie.light.css","hash":"6c95f1dc95fe047eff53b52231a8f552ec17713d","modified":1485603302366},{"_id":"themes/material/source/css/highlight/magula.css","hash":"5a0e59aff9f270dbb166e2735edf0bd91569ad9d","modified":1485603302368},{"_id":"themes/material/source/css/highlight/mono-blue.css","hash":"3d78780568f60215686ca93e1459c0a86b1e13a2","modified":1485603302370},{"_id":"themes/material/source/css/highlight/monokai-sublime.css","hash":"0d16b61fd8723b61ebbb4ae85936b7222089cd5c","modified":1485603302373},{"_id":"themes/material/source/css/highlight/monokai.css","hash":"525238932a2e8a86d36ff559ec8c56617a81c66a","modified":1485603302375},{"_id":"themes/material/source/css/highlight/obsidian.css","hash":"c8f452d1dd3c24ed1fd31a8a542976a98768f0ee","modified":1485603302377},{"_id":"themes/material/source/css/highlight/ocean.css","hash":"05261db4eab97828f1e0e2d8dac3c17b46c5135b","modified":1485603302379},{"_id":"themes/material/source/css/highlight/paraiso-dark.css","hash":"54a74080b472d4f02ec892383df7243a9fc0325c","modified":1485603302382},{"_id":"themes/material/source/css/highlight/paraiso-light.css","hash":"ec682ddb4f6c6022e86bbc3b21fee2db17534dfa","modified":1485603302385},{"_id":"themes/material/source/css/highlight/pojoaque.css","hash":"147fa0862896e6954bc6800e573d0dc009d0bd76","modified":1485603302387},{"_id":"themes/material/source/css/highlight/purebasic.css","hash":"90723dc0145d109bfd8f52a6586cafc0b60f3744","modified":1485603302389},{"_id":"themes/material/source/css/highlight/qtcreator_dark.css","hash":"f6247839bf5f054c1c67675c9a2009c9dd882a54","modified":1485603302391},{"_id":"themes/material/source/css/highlight/qtcreator_light.css","hash":"64a3df679ec5c1189fc4f4c046da13ccfde61088","modified":1485603302394},{"_id":"themes/material/source/css/highlight/railscasts.css","hash":"1bb2dd8ccba3e33aa3fd419bad757b0710ca7bf3","modified":1485603302396},{"_id":"themes/material/source/css/highlight/rainbow.css","hash":"34ebae47223dc8e1b6464880fa83e217a5774199","modified":1485603302398},{"_id":"themes/material/source/css/highlight/school-book.css","hash":"908952208417159a90bd05cd6b9c1ae6cfab5274","modified":1485603302400},{"_id":"themes/material/source/css/highlight/solarized-dark.css","hash":"97bba4362e3001a93f1b111a140895cbe6047a81","modified":1485603302402},{"_id":"themes/material/source/css/highlight/solarized-light.css","hash":"fe6779c179c3e6136384e463fdc6d3b08ff88ba7","modified":1485603302405},{"_id":"themes/material/source/css/highlight/solarized-white.css","hash":"1d10f6dc697821d0959eaf975dddddff971a6d63","modified":1485603302407},{"_id":"themes/material/source/css/highlight/sunburst.css","hash":"bcbe342ac0be63bb2e8545f426e13c1751a70923","modified":1485603302409},{"_id":"themes/material/source/css/highlight/tomorrow-night-blue.css","hash":"8fc2bd599487fa428895af9c15278b629205a005","modified":1485603302411},{"_id":"themes/material/source/css/highlight/tomorrow-night-bright.css","hash":"db7f477d609bfd0d264f69fdee32d28b2b3771ec","modified":1485603302413},{"_id":"themes/material/source/css/highlight/tomorrow-night-eighties.css","hash":"12449d31f223502297086943f1bfeeac5f28c4c1","modified":1485603302414},{"_id":"themes/material/source/css/highlight/tomorrow-night.css","hash":"51486c77fab70d7615e814787531d1a7db22a65a","modified":1485603302416},{"_id":"themes/material/source/css/highlight/tomorrow.css","hash":"e98fd167fe9c5668165f28dd6c0ecb59b3293f67","modified":1485603302418},{"_id":"themes/material/source/css/highlight/vs.css","hash":"7f91ad5a66ffbc8db2af542bd2db0e84bcf22587","modified":1485603302420},{"_id":"themes/material/source/css/highlight/xcode.css","hash":"229ba54cfed52b79c389eb094ef3e480350bf308","modified":1485603302422},{"_id":"themes/material/source/css/highlight/xt256.css","hash":"1cfc26a3ec7154a4649eee5bfe57a50e0dc5046e","modified":1485603302425},{"_id":"themes/material/source/css/highlight/zenburn.css","hash":"92941a6ae73b74f44ad7c559c5548c44073c644a","modified":1485603302426},{"_id":"themes/material/source/css/material.css","hash":"a4f33bc2e224f7731456d5ee4aae2a1ac80c3011","modified":1485603302432},{"_id":"themes/material/source/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1485603302454},{"_id":"themes/material/source/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1485603302553},{"_id":"themes/material/source/img/footer/footer_ico-bilibili.png","hash":"f922bc4606f4ecb3ec2bc1b2bfa092643ffa2e37","modified":1485603302590},{"_id":"themes/material/source/img/footer/footer_ico-facebook.png","hash":"66f959829d878794e66fd0e40c0d6bd843cc0cde","modified":1485603302595},{"_id":"themes/material/source/img/footer/footer_ico-coding.png","hash":"97b3e602a60ca131afff97f926af9c5c7186d59f","modified":1485741067147},{"_id":"themes/material/source/img/footer/footer_ico-github.png","hash":"4488aa8fc794beaba3e4c80d1f1b9d6c218b31ab","modified":1485603302598},{"_id":"themes/material/source/img/footer/footer_ico-gplus.png","hash":"20971cbed2ebf58b9e3b087051f7fc56073da31d","modified":1485603302601},{"_id":"themes/material/source/img/footer/footer_ico-instagram.png","hash":"e8ec64e6f2639aec952e8e4d2944d5173f62e720","modified":1485603302606},{"_id":"themes/material/source/img/footer/footer_ico-linkedin.png","hash":"3d93bb435053b93243e3c259c448caf4ed00627e","modified":1485603302615},{"_id":"themes/material/source/img/footer/footer_ico-telegram.png","hash":"1095c5279c498412ee314f4469768636e82148cb","modified":1485603302619},{"_id":"themes/material/source/img/footer/footer_ico-tumblr.png","hash":"447421c1dcced081fa5fb0355421b7bc71fe3f76","modified":1485603302631},{"_id":"themes/material/source/img/footer/footer_ico-twitter.png","hash":"98b6529d3e08d5d086a4df85c20265c4517ec9a8","modified":1485603302635},{"_id":"themes/material/source/img/footer/footer_ico-weibo.png","hash":"8d46998b88f57a2d92effaa65e97ee36906396c2","modified":1485603302643},{"_id":"themes/material/source/img/footer/footer_ico-zhihu.png","hash":"6b94cdb6e0a69e169baec6e22fe3a6e51b7ba4b5","modified":1485603302647},{"_id":"themes/material/source/img/gallery/arrow.svg","hash":"144d73877e52acc5068bc0c9d1e69ef450e69f26","modified":1485603302650},{"_id":"themes/material/source/img/gallery/close.svg","hash":"2690088060811f01c9360df75be80070156ff176","modified":1485603302653},{"_id":"themes/material/source/img/gallery/spinner.svg","hash":"fc9d1cd1118ac896d4f5326e110a653f3ea32b11","modified":1485603302656},{"_id":"themes/material/source/img/random/material-1.png","hash":"93a0743b9680da4740e8905bb282dd2a82ee4f51","modified":1485607701000},{"_id":"themes/material/source/img/random/material-2.png","hash":"d07c391c27317f4e8e85b15cf1a585c996313f30","modified":1485607707000},{"_id":"themes/material/source/img/random/material-4.png","hash":"addcae1f64310bec1fe6ae0bc25056fa653849b6","modified":1485607714000},{"_id":"themes/material/source/js/gallery/jquery.poptrox.min.js","hash":"4b156b61a32467b6bf7766201b777d8949a74ee4","modified":1485603302784},{"_id":"themes/material/source/js/gallery/main.min.js","hash":"c8ab39417f0d855bd28b3f6e040e93b245ba10f1","modified":1485603302785},{"_id":"themes/material/source/js/gallery/skel.min.js","hash":"18a181affac3ac6dcb5e4504e56b14941f4f2185","modified":1485603302787},{"_id":"themes/material/source/js/gallery/util.min.js","hash":"21f9de56727e235a83d514d08a65c7ef1b09c9e9","modified":1485603302788},{"_id":"themes/material/.git/objects/c5/39ee57eeae7097a9fb6eddd87e5a64d7fcde0a","hash":"2a571caed7c3803bc6bdca42bceefc1b79d87294","modified":1485655477783},{"_id":"themes/material/.git/objects/pack/pack-96e96948cb6c9a80072d349ebdb0d8d5c1b50c3a.idx","hash":"1129044513b630e6c896b01733683d9fbf0b6a9d","modified":1485603301227},{"_id":"themes/material/source/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1485603302696},{"_id":"themes/material/source/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1485603302705},{"_id":"themes/material/source/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1485603302708},{"_id":"themes/material/source/img/random/material-17.png","hash":"9c463f96d4dadae4e67932c2d7ed1e353c4ecca8","modified":1485603302730},{"_id":"themes/material/source/img/random/material-3.png","hash":"44a9c36137f79c036368ad623f0f970e1520ebdf","modified":1485607711000},{"_id":"themes/material/source/img/random/material-6.png","hash":"29dd92b7c110bb6dfdfc2923c33f5d0895518001","modified":1485603302761},{"_id":"themes/material/.git/logs/refs/heads/master","hash":"d555eaf651a455530a3bb7fa73c28e52a3848695","modified":1485655478283},{"_id":"themes/material/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1485603301964},{"_id":"themes/material/source/img/random/material-10.png","hash":"021dca8d2477dae8f456a0cdc2725502d3b45785","modified":1485603302679},{"_id":"themes/material/source/img/random/material-12.png","hash":"ba0c8506af62f984da564e6e390f592475e51f2d","modified":1485603302693},{"_id":"themes/material/source/img/random/material-9.png","hash":"bc4f1b42fd2d09a80ab5fef8c6066b5148db0749","modified":1485603302776},{"_id":"themes/material/source/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1485603302547},{"_id":"themes/material/source/img/random/material-11.png","hash":"637d4513d1e7beeb1e5179fa404b4b6ea61ca3dd","modified":1485603302685},{"_id":"themes/material/source/img/random/material-19.png","hash":"f0b5383ba5c7e91f711daaa6b3a520556b7ca14d","modified":1485603302739},{"_id":"themes/material/source/img/random/material-8.png","hash":"cb700661e312a5527aaf229517705adb1c1cead2","modified":1485603302773},{"_id":"themes/material/.git/logs/refs/remotes/origin/HEAD","hash":"ffa0abfa04ac86831a46840888f1df2cab6c6765","modified":1485603301963},{"_id":"themes/material/source/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1485603302475},{"_id":"themes/material/source/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1485603302486},{"_id":"themes/material/source/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1485603302496},{"_id":"themes/material/source/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1485603302508},{"_id":"themes/material/source/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1485603302518},{"_id":"themes/material/source/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1485603302531},{"_id":"themes/material/source/img/random/material-7.png","hash":"e4aa6d4e1b52f1c097f61b5205d5b71a412e1d80","modified":1485603302768},{"_id":"themes/material/source/img/random/material-18.png","hash":"1d5bacea5d57cc3e652a7c697bcb4fbcb11e20dc","modified":1485603302735},{"_id":"themes/material/source/img/random/material-5.png","hash":"e26c197b3a765bbdcc966e4fb368c8808e9d655d","modified":1485603302758},{"_id":"themes/material/source/img/random/material-14.png","hash":"f6bd9ceca7deb32c45b02a5d89014c7ee4748833","modified":1485603302701},{"_id":"themes/material/.git/objects/pack/pack-96e96948cb6c9a80072d349ebdb0d8d5c1b50c3a.pack","hash":"64278b32c6c2e7fa97a3e53f9163ae338ffb10f6","modified":1485603301234},{"_id":"public/search.xml","hash":"a23e6346c8da96252a8e04e0251e1b4b7e488cb9","modified":1485942094239},{"_id":"public/2017/01/29/Axios的配置/index.html","hash":"13f4a685bbe4dd9cac481b07ea46d11699a9ebb9","modified":1485942094496},{"_id":"public/2017/01/28/hello/index.html","hash":"34ae07ff0b0b72426b6da34081bc012507de6271","modified":1485942094496},{"_id":"public/archives/index.html","hash":"2bd512931126b8e70c385616421ad381209466cf","modified":1485942094496},{"_id":"public/archives/2017/index.html","hash":"cf4f794f47c7ad6bb5a0664819d601031e113063","modified":1485942094496},{"_id":"public/archives/2017/01/index.html","hash":"098b5693a90a87367a1d02d1e9fa2f23d3f9062f","modified":1485942094496},{"_id":"public/index.html","hash":"c40a00a2cc4c3d0f09ce4e99fbdd905bde8e82f7","modified":1485942094497},{"_id":"public/tags/Vue/index.html","hash":"f856efef2990018cf0c1e0a9cf54412037f12d09","modified":1485942094497},{"_id":"public/tags/Axio/index.html","hash":"e7eec138be7c847094ef7a6290fd4859eda1f182","modified":1485942094497},{"_id":"public/2017/02/01/Vuex2与Axios开发/index.html","hash":"2ab297af42aa29f26e2503bf7b365a60fcc34b7c","modified":1485942094495},{"_id":"public/archives/2017/02/index.html","hash":"ac84a7d7e83acb7b712634ca54a4f9e705678f5d","modified":1485942094497},{"_id":"public/tags/Vuex2/index.html","hash":"05b7518b31d6b188f05a5cb6d8053f75565dae13","modified":1485942094497},{"_id":"public/tags/Axios/index.html","hash":"7d293893b169055879e2a89d0afd50e929f42ce0","modified":1485942094497},{"_id":"public/tags/Hexo/index.html","hash":"878965c472ed5d6d62224d6155bc29df1e2a958f","modified":1485942094497},{"_id":"public/tags/博客/index.html","hash":"03cb908a120e3f57f28bc5dfcf3675f083070a0b","modified":1485942094497},{"_id":"public/fonts/MaterialIcons-Regular.woff","hash":"c6c953c2ccb2ca9abb21db8dbf473b5a435f0082","modified":1485939388942},{"_id":"public/fonts/MaterialIcons-Regular.woff2","hash":"09963592e8c953cc7e14e3fb0a5b05d5042e8435","modified":1485939388942},{"_id":"public/img/avatar.png","hash":"67f44f4a29122341d6cb299489098821a47ce645","modified":1485939388942},{"_id":"public/img/bg.png","hash":"a32f9717e19e821a4030ade551dc2917c889fcd8","modified":1485939388942},{"_id":"public/img/daily_pic.jpg","hash":"8f6052d803dce3f993d900c007a8525616fa10f7","modified":1485939388942},{"_id":"public/img/favicon.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1485939388943},{"_id":"public/img/logo.png","hash":"b1bcc84cedb2a618e8db93559ce7d58f9274085d","modified":1485939388943},{"_id":"public/img/sidebar_header.png","hash":"2cbc5ce550c4eac3d0590114f624c48a5fb98ab3","modified":1485939388943},{"_id":"public/img/upyun_logo.png","hash":"aee4e90c4e2e72ef7036668c52dabcd8d028ee2f","modified":1485939388943},{"_id":"public/img/footer/footer_ico-facebook.png","hash":"66f959829d878794e66fd0e40c0d6bd843cc0cde","modified":1485939388943},{"_id":"public/img/footer/footer_ico-bilibili.png","hash":"f922bc4606f4ecb3ec2bc1b2bfa092643ffa2e37","modified":1485939388943},{"_id":"public/img/footer/footer_ico-github.png","hash":"4488aa8fc794beaba3e4c80d1f1b9d6c218b31ab","modified":1485939388943},{"_id":"public/img/footer/footer_ico-coding.png","hash":"97b3e602a60ca131afff97f926af9c5c7186d59f","modified":1485939388943},{"_id":"public/img/footer/footer_ico-gplus.png","hash":"20971cbed2ebf58b9e3b087051f7fc56073da31d","modified":1485939388943},{"_id":"public/img/footer/footer_ico-instagram.png","hash":"e8ec64e6f2639aec952e8e4d2944d5173f62e720","modified":1485939388943},{"_id":"public/img/footer/footer_ico-linkedin.png","hash":"3d93bb435053b93243e3c259c448caf4ed00627e","modified":1485939388943},{"_id":"public/img/footer/footer_ico-telegram.png","hash":"1095c5279c498412ee314f4469768636e82148cb","modified":1485939388943},{"_id":"public/img/footer/footer_ico-tumblr.png","hash":"447421c1dcced081fa5fb0355421b7bc71fe3f76","modified":1485939388943},{"_id":"public/img/footer/footer_ico-twitter.png","hash":"98b6529d3e08d5d086a4df85c20265c4517ec9a8","modified":1485939388943},{"_id":"public/img/footer/footer_ico-weibo.png","hash":"8d46998b88f57a2d92effaa65e97ee36906396c2","modified":1485939388943},{"_id":"public/img/footer/footer_ico-zhihu.png","hash":"6b94cdb6e0a69e169baec6e22fe3a6e51b7ba4b5","modified":1485939388943},{"_id":"public/img/gallery/arrow.svg","hash":"144d73877e52acc5068bc0c9d1e69ef450e69f26","modified":1485939388943},{"_id":"public/img/gallery/spinner.svg","hash":"fc9d1cd1118ac896d4f5326e110a653f3ea32b11","modified":1485939388944},{"_id":"public/img/gallery/close.svg","hash":"2690088060811f01c9360df75be80070156ff176","modified":1485939388944},{"_id":"public/img/random/material-1.png","hash":"93a0743b9680da4740e8905bb282dd2a82ee4f51","modified":1485939388944},{"_id":"public/img/random/material-2.png","hash":"d07c391c27317f4e8e85b15cf1a585c996313f30","modified":1485939388944},{"_id":"public/img/random/material-4.png","hash":"addcae1f64310bec1fe6ae0bc25056fa653849b6","modified":1485939388944},{"_id":"public/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1485939388952},{"_id":"public/fonts/MaterialIcons-Regular.ttf","hash":"fc05de31234e0090f7ddc28ce1b23af4026cb1da","modified":1485939388978},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1485939389011},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1485939389012},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1485939389012},{"_id":"public/img/daily_pic.png","hash":"5e9a5f6a134889d0242e69061837f2032416d7ce","modified":1485939389012},{"_id":"public/img/random/material-13.png","hash":"1a8378db3121b583485e2b939cb1aa0e0b14b0c8","modified":1485939389013},{"_id":"public/img/random/material-15.png","hash":"36b9937cf3810e4970902b78797ad29b0831f065","modified":1485939389014},{"_id":"public/img/random/material-16.png","hash":"ade7f75200d3fb38326e3cf1e9f1a812fb12a43b","modified":1485939389014},{"_id":"public/img/random/material-17.png","hash":"9c463f96d4dadae4e67932c2d7ed1e353c4ecca8","modified":1485939389014},{"_id":"public/img/random/material-3.png","hash":"44a9c36137f79c036368ad623f0f970e1520ebdf","modified":1485939389015},{"_id":"public/img/random/material-6.png","hash":"29dd92b7c110bb6dfdfc2923c33f5d0895518001","modified":1485939389015},{"_id":"public/css/duoshuo.css","hash":"32a02eaa01ff7b66fd9df307b0d33d52810096be","modified":1485939389058},{"_id":"public/css/duoshuo.min.css","hash":"89a30544b8b01d061da51c40f2af702a7969de5e","modified":1485939389058},{"_id":"public/css/uc.css","hash":"7609828f93973d1a6d3ba4b38d94688a92a6a6c5","modified":1485939389058},{"_id":"public/css/ie-blocker.css","hash":"dddce7e6250a449291888ae7865697282a213b14","modified":1485939389058},{"_id":"public/js/ie-blocker.en.js","hash":"96ca8e677a12048d099319ebdf01983ddc6ca80c","modified":1485939389058},{"_id":"public/js/ie-blocker.zhCN.js","hash":"0ed49b0ec1d1924b128fbd97fca2cf7af7856fdf","modified":1485939389059},{"_id":"public/js/smoothscroll.js","hash":"df56a1c84191a62750ae820943377b6775fca0e2","modified":1485939389060},{"_id":"public/js/nprogress.js","hash":"a3058d4b6afb5d7a14e5afcbb88f778de35864f0","modified":1485939389060},{"_id":"public/css/highlight/agate.css","hash":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1485939389060},{"_id":"public/css/highlight/androidstudio.css","hash":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1485939389060},{"_id":"public/css/highlight/arduino-light.css","hash":"c6e05580b51b755e229e99eb156940ad2cab192b","modified":1485939389060},{"_id":"public/css/highlight/arta.css","hash":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1485939389060},{"_id":"public/css/highlight/ascetic.css","hash":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1485939389060},{"_id":"public/css/highlight/atelier-cave-dark.css","hash":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1485939389060},{"_id":"public/css/highlight/atelier-dune-dark.css","hash":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1485939389061},{"_id":"public/css/highlight/atelier-cave-light.css","hash":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1485939389061},{"_id":"public/css/highlight/atelier-dune-light.css","hash":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1485939389061},{"_id":"public/css/highlight/atelier-estuary-dark.css","hash":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1485939389061},{"_id":"public/css/highlight/atelier-estuary-light.css","hash":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1485939389062},{"_id":"public/css/highlight/atelier-forest-dark.css","hash":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1485939389062},{"_id":"public/css/highlight/atelier-heath-dark.css","hash":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1485939389062},{"_id":"public/css/highlight/atelier-forest-light.css","hash":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1485939389062},{"_id":"public/css/highlight/atelier-heath-light.css","hash":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1485939389062},{"_id":"public/css/highlight/atelier-lakeside-dark.css","hash":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1485939389062},{"_id":"public/css/highlight/atelier-lakeside-light.css","hash":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1485939389062},{"_id":"public/css/highlight/atelier-plateau-dark.css","hash":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1485939389062},{"_id":"public/css/highlight/atelier-plateau-light.css","hash":"9731db1052f23351c983210701edd3f5ceed343f","modified":1485939389062},{"_id":"public/css/highlight/atelier-savanna-dark.css","hash":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1485939389062},{"_id":"public/css/highlight/atelier-savanna-light.css","hash":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1485939389062},{"_id":"public/css/highlight/atelier-seaside-dark.css","hash":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1485939389063},{"_id":"public/css/highlight/atelier-seaside-light.css","hash":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1485939389063},{"_id":"public/css/highlight/atelier-sulphurpool-dark.css","hash":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1485939389063},{"_id":"public/css/highlight/atelier-sulphurpool-light.css","hash":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1485939389063},{"_id":"public/css/highlight/atom-one-light.css","hash":"eda63d8cce440dbf3bb823e10577a134e9941deb","modified":1485939389063},{"_id":"public/css/highlight/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1485939389063},{"_id":"public/css/highlight/brown-paper.css","hash":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1485939389063},{"_id":"public/css/highlight/codepen-embed.css","hash":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1485939389064},{"_id":"public/css/highlight/color-brewer.css","hash":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1485939389064},{"_id":"public/css/highlight/dark.css","hash":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1485939389064},{"_id":"public/css/highlight/darcula.css","hash":"7740224d07375ddc321147dffabbfa83e39f0d8b","modified":1485939389064},{"_id":"public/css/highlight/darkula.css","hash":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1485939389064},{"_id":"public/css/highlight/docco.css","hash":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1485939389064},{"_id":"public/css/highlight/dracula.css","hash":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1485939389064},{"_id":"public/css/highlight/far.css","hash":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1485939389065},{"_id":"public/css/highlight/foundation.css","hash":"75b0674dd1ed35d61977bd5c35dc29ca35835a7b","modified":1485939389065},{"_id":"public/css/highlight/googlecode.css","hash":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1485939389065},{"_id":"public/css/highlight/github-gist.css","hash":"77cf684fda415812d6279a52f299c84850244778","modified":1485939389065},{"_id":"public/css/highlight/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1485939389065},{"_id":"public/css/highlight/grayscale.css","hash":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1485939389065},{"_id":"public/css/highlight/gruvbox-dark.css","hash":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1485939389065},{"_id":"public/css/highlight/gruvbox-light.css","hash":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1485939389065},{"_id":"public/css/highlight/hopscotch.css","hash":"03e7b9ec74bbd375db8d476836aac3729a6c86e8","modified":1485939389065},{"_id":"public/css/highlight/hybrid.css","hash":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1485939389065},{"_id":"public/css/highlight/idea.css","hash":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1485939389065},{"_id":"public/css/highlight/ir-black.css","hash":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1485939389065},{"_id":"public/css/highlight/kimbie.dark.css","hash":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1485939389066},{"_id":"public/css/highlight/kimbie.light.css","hash":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1485939389066},{"_id":"public/css/highlight/magula.css","hash":"ebc291f90e456abeeccb16937e7f51735733f4f7","modified":1485939389066},{"_id":"public/css/highlight/mono-blue.css","hash":"fd0f39cd4c93ccb8d0bb2f6a1f359522e15a89cb","modified":1485939389066},{"_id":"public/css/highlight/monokai-sublime.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1485939389066},{"_id":"public/css/highlight/monokai.css","hash":"f69df92e3ccdce28e6f811ec84f11698f2811198","modified":1485939389066},{"_id":"public/css/highlight/ocean.css","hash":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1485939389066},{"_id":"public/css/highlight/obsidian.css","hash":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1485939389066},{"_id":"public/css/highlight/paraiso-dark.css","hash":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1485939389066},{"_id":"public/css/highlight/paraiso-light.css","hash":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1485939389067},{"_id":"public/css/highlight/pojoaque.css","hash":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1485939389067},{"_id":"public/css/highlight/purebasic.css","hash":"ef74aa66da52bf7ff04ae4972b3e351372043057","modified":1485939389067},{"_id":"public/css/highlight/qtcreator_dark.css","hash":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1485939389067},{"_id":"public/css/highlight/qtcreator_light.css","hash":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1485939389067},{"_id":"public/css/highlight/railscasts.css","hash":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1485939389067},{"_id":"public/css/highlight/rainbow.css","hash":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1485939389067},{"_id":"public/css/highlight/school-book.css","hash":"60fe3d8063b1acc4d52de02033095adb0a2b35a9","modified":1485939389068},{"_id":"public/css/highlight/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1485939389068},{"_id":"public/css/highlight/solarized-white.css","hash":"e6d606e8e4b1fa3a363fb3ef0b2b8a2a40e3f7ed","modified":1485939389068},{"_id":"public/css/highlight/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1485939389068},{"_id":"public/css/highlight/sunburst.css","hash":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1485939389068},{"_id":"public/css/highlight/tomorrow-night-blue.css","hash":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1485939389068},{"_id":"public/css/highlight/tomorrow-night-eighties.css","hash":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1485939389069},{"_id":"public/css/highlight/tomorrow-night-bright.css","hash":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1485939389069},{"_id":"public/css/highlight/tomorrow-night.css","hash":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1485939389071},{"_id":"public/css/highlight/tomorrow.css","hash":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1485939389072},{"_id":"public/css/highlight/vs.css","hash":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1485939389072},{"_id":"public/css/highlight/xcode.css","hash":"65d775a7e11e238c91e0d3c7370547348c92d6b3","modified":1485939389072},{"_id":"public/css/highlight/xt256.css","hash":"bbe28ec69177699cb6300d777598adf6323f7861","modified":1485939389072},{"_id":"public/css/highlight/zenburn.css","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1485939389072},{"_id":"public/js/gallery/jquery.poptrox.min.js","hash":"ade2e2710565eebca01b68b9bfae4a4848d779aa","modified":1485939389072},{"_id":"public/js/gallery/main.min.js","hash":"c8ab39417f0d855bd28b3f6e040e93b245ba10f1","modified":1485939389072},{"_id":"public/js/gallery/util.min.js","hash":"21f9de56727e235a83d514d08a65c7ef1b09c9e9","modified":1485939389072},{"_id":"public/js/gallery/skel.min.js","hash":"a337cc51a3fb9953d306b3879e2e7676dd27ce53","modified":1485939389072},{"_id":"public/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1485939389073},{"_id":"public/js/highlight.min.js","hash":"de8b5bc84ade7906ea2000deb3a9c29dd700ea05","modified":1485939389073},{"_id":"public/css/material.min.css","hash":"f3c8e6a9d94e6cad30c6628e1d732e6ee00d5fce","modified":1485939389073},{"_id":"public/css/style.css","hash":"d37a4998c382a6ffda6365e7352ba6ccca39175b","modified":1485939389073},{"_id":"public/css/style.min.css","hash":"ac6be209ae8814ccc9b9dad7b87c14d40e8ef303","modified":1485939389073},{"_id":"public/js/jquery.min.js","hash":"00073d6597d2760b81387274a9ec56b9d5cb1552","modified":1485939389073},{"_id":"public/js/js.min.js","hash":"0653ac558249173228c656f0b51b08286c1da250","modified":1485939389073},{"_id":"public/js/js.js","hash":"5c36b940f65bd43dbe9613cb1a7f730d93213021","modified":1485939389074},{"_id":"public/css/material.css","hash":"3c138cc7cf3d53c033471c6706b0d553b0b936bf","modified":1485939389074},{"_id":"public/fonts/MaterialIcons-Regular.eot","hash":"26fb8cecb5512223277b4d290a24492a0f09ede1","modified":1485939389074},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1485939389075},{"_id":"public/img/random/material-10.png","hash":"021dca8d2477dae8f456a0cdc2725502d3b45785","modified":1485939389075},{"_id":"public/img/random/material-12.png","hash":"ba0c8506af62f984da564e6e390f592475e51f2d","modified":1485939389075},{"_id":"public/img/random/material-9.png","hash":"bc4f1b42fd2d09a80ab5fef8c6066b5148db0749","modified":1485939389075},{"_id":"public/img/random/material-11.png","hash":"637d4513d1e7beeb1e5179fa404b4b6ea61ca3dd","modified":1485939389139},{"_id":"public/img/random/material-19.png","hash":"f0b5383ba5c7e91f711daaa6b3a520556b7ca14d","modified":1485939389139},{"_id":"public/img/random/material-8.png","hash":"cb700661e312a5527aaf229517705adb1c1cead2","modified":1485939389140},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1485939389217},{"_id":"public/fonts/Roboto-Black.ttf","hash":"0244e6497a51fb8a38ca7e6fe297b066e2e09af5","modified":1485939389308},{"_id":"public/fonts/Roboto-Bold.ttf","hash":"d1864343b543978bd491d40c80010cea50c1b7bf","modified":1485939389308},{"_id":"public/fonts/Roboto-Light.ttf","hash":"b9ea2eaf26ff8fdcb5aee3e0c2c7a6084ebb6aac","modified":1485939389308},{"_id":"public/fonts/Roboto-Medium.ttf","hash":"3965419aab480c184f66bc5e39c1719a373a4ef6","modified":1485939389309},{"_id":"public/fonts/Roboto-Regular.ttf","hash":"06691e103d4d3ce1f1108d9b7d21254b714a41f8","modified":1485939389309},{"_id":"public/fonts/Roboto-Thin.ttf","hash":"ed5101c3a800f35e925603a406e0c2dc5278b96c","modified":1485939389310},{"_id":"public/img/random/material-7.png","hash":"e4aa6d4e1b52f1c097f61b5205d5b71a412e1d80","modified":1485939389310},{"_id":"public/img/random/material-18.png","hash":"1d5bacea5d57cc3e652a7c697bcb4fbcb11e20dc","modified":1485939389316},{"_id":"public/img/random/material-5.png","hash":"e26c197b3a765bbdcc966e4fb368c8808e9d655d","modified":1485939389316},{"_id":"public/img/random/material-14.png","hash":"f6bd9ceca7deb32c45b02a5d89014c7ee4748833","modified":1485939389320}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"_posts","title":"Vuex2与Axios开发","date":"2017-02-01T08:42:40.000Z","thumbnail":"http://okkula0y9.bkt.clouddn.com/201602011.jpg","_content":"\n\n\n> 总结笔者最近在项目中使用Vuex2和Axios的总结和小技巧，方便日后查看。本人能力有限，如有错误还请大大们指正探讨😭。\n\n# 阅读前须知\n接上一篇的[Axios的配置][1]，阅读本文默认您已经掌握了Vuex2的基本语法、Axios的使用配置与方法、Promise的基本语法。（下面将放出参考链接方便大家在有不明白的地方查看）此篇主要叙述我在实际项目过程中Vuex2和Axios的组合操作。\n\n参考：\n- [Vue单向数据流-Vuex2][2]\n- [Ajax库-Axios][3]\n- [Promise介绍][4]\n\n\n## Vuex2中的Actions\n\n在Vuex1中actions都可以统一使用`dispatch`去触发`mutation`，那时候去异步这种数据流没什么认识。在Vuex2中规定了,同步的方法使用`commit`去提交`mutation`，异步的方法（如接口请求，完成接口请求后的操作）只能通过分发action去触发，即使用`dispatch`。\n\n![此处输入图片的描述][5]\n\n这里不经吐槽2句，Vuex2的Api还是蛮人性化的，对比Redux为了用好单向数据流，不得不引入一大堆诸如`react-redux`、`redux-saga`、`redux-thunk`...，对新上手的小白来说简直是一脸蒙蔽。上面这些库所带的功能，用Vuex2都可以完成（手动骄傲），当然Vuex2也是站在这些巨人的肩膀上。\n\n\n下面来看下`vuex2`中关于actions的API\n``` javascript\n\n类型: { [type: string]: Function }\n\n在 store 上注册 action。处理函数接受一个 context 对象，包含以下属性：\n\n{\n  state,     // 等同于 store.state, 若在模块中则为局部状态\n  rootState, // 等同于 store.state, 只存在于模块中\n  commit,    // 等同于 store.commit\n  dispatch,  // 等同于 store.dispatch\n  getters    // 等同于 store.getters\n}\n```\n\n\n## Axios的配置\n\n这个是我项目内Axios的配置，主要做了下面几件事情\n1. 5秒的超时验证\n2. POST的设置\n3. 统一的response封装。我通过接口传回的CODE码去判断该请求是否正确\n如果想去看更详细的解析可以通过[Axios的配置][1]\n\n``` javascript\n\nimport axios from 'axios'\nimport qs from 'qs'\nimport * as _ from './whole'    //alert\n\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://xxx.xxx.com';\n\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   _.toast(\"错误的传参\");\n  return Promise.reject(error);\n});\n\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    _.toast(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  _.toast(\"网络异常\");\n  return Promise.reject(error);\n});\n\nexport default axios;\n\n```\n\n## 完成一个请求操作\n\n下面介绍一个登陆action的操作，\n1. 在接口发起请求时跳出loading\n2. 接口请求成功结束loading，并保存数据进入store\n3. 接口请求失败抛出异常，结束loading。\n4. 返回一个Promise对象，方便继续操作。\n\n``` javascript\nexport const login = ({ commit },params) => {\n  _.busy();               //loding开始\n  return new Promise((resolve, reject)=> { \n    axios({\n      method:'get',\n      url: 'teacher/login',\n      params: {\n        moblie:params.mobile,\n        password:params.password,\n      }\n    })\n    .then((response) => {\n        commit(types.LOGIN,response.data.data); //获得的数据通过mutation，存入store中\n        _.leave();  //loding结束\n        resolve(response);\n    })\n    .catch((error) => {\n      _.leave();  //loding结束\n    })\n  });\n}\n\nconst mutations = {\n  [types.LOGIN](state, data){\n    state.token = data.token;\n  }\n}\n\n```\n\n\n\n``` javascript\n//调用action\n\nimport { mapActions,mapGetters  } from 'vuex'\n\nexport default {\n  methods:{\n    ...mapActions(['login']),                   //注入action\n    _login(){\n      let params = {\n        mobile:this.mobile,\n        pwd:this.password\n      }\n      this.login(params).\n      then(()=>{\n          this.$router.replace('/main/index');          //正确完成后进入主页\n      })\n      .catch((error)=>{                                 //错误则清空密码文本框\n          //可以在这里对Error进行捕获，然后根据错误类型进行相对应的处理\n          this.pwd = '';                           \n      });\n    }\n  }\n\n```\n\n## 一点说明\n因为在Vuex2中action可以直接拿到Store的值，所以我们可以通过 `rootState`这个参数拿到根的store值，通过`state`拿到当前模块中store的值\n都没必要在从getter里拿到值，然后通过params的方式传入。\n\n``` javascript\n\nexport const xxx = ({state,rootState,commit}) => {\n  return new Promise((resolve, reject)=> { \n    axios({\n      method:'get',\n      url: 'teacher/workbook/class/exercise',\n      params: {\n        \"token\":rootState.login.token,          //从store根中拿到数据\n        \"classCode\":state.code,                 //从当前模块中拿到数据\n        \"chapterId\":rootState.route.params.chapterId\n      }\n    })\n    .then((response) => {\n      commit(types.WORKBOOK_CLASS_EXERCISE,response.data.data)\n      resolve(response);\n    })\n  });\n}\n\n```\n这样是不是更方便我们去审查action的代码？\n\n\n\n  [1]: https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\n  [2]: https://vuex.vuejs.org/zh-cn/index.html\n  [3]: https://github.com/mzabriskie/axioss://vuex.vuejs.org/zh-cn/index.html\n  [4]: http://www.jianshu.com/p/063f7e490e9aoss://vuex.vuejs.org/zh-cn/index.html\n  [5]: https://vuex.vuejs.org/zh-cn/images/flow.png","source":"_posts/Vuex2与Axios开发.md","raw":"---\nlayout: _posts\ntitle: 'Vuex2与Axios开发'\ndate: 2017-02-01 16:42:40\ntags: [Vuex2,Vue,Axios]\nthumbnail: http://okkula0y9.bkt.clouddn.com/201602011.jpg\n---\n\n\n\n> 总结笔者最近在项目中使用Vuex2和Axios的总结和小技巧，方便日后查看。本人能力有限，如有错误还请大大们指正探讨😭。\n\n# 阅读前须知\n接上一篇的[Axios的配置][1]，阅读本文默认您已经掌握了Vuex2的基本语法、Axios的使用配置与方法、Promise的基本语法。（下面将放出参考链接方便大家在有不明白的地方查看）此篇主要叙述我在实际项目过程中Vuex2和Axios的组合操作。\n\n参考：\n- [Vue单向数据流-Vuex2][2]\n- [Ajax库-Axios][3]\n- [Promise介绍][4]\n\n\n## Vuex2中的Actions\n\n在Vuex1中actions都可以统一使用`dispatch`去触发`mutation`，那时候去异步这种数据流没什么认识。在Vuex2中规定了,同步的方法使用`commit`去提交`mutation`，异步的方法（如接口请求，完成接口请求后的操作）只能通过分发action去触发，即使用`dispatch`。\n\n![此处输入图片的描述][5]\n\n这里不经吐槽2句，Vuex2的Api还是蛮人性化的，对比Redux为了用好单向数据流，不得不引入一大堆诸如`react-redux`、`redux-saga`、`redux-thunk`...，对新上手的小白来说简直是一脸蒙蔽。上面这些库所带的功能，用Vuex2都可以完成（手动骄傲），当然Vuex2也是站在这些巨人的肩膀上。\n\n\n下面来看下`vuex2`中关于actions的API\n``` javascript\n\n类型: { [type: string]: Function }\n\n在 store 上注册 action。处理函数接受一个 context 对象，包含以下属性：\n\n{\n  state,     // 等同于 store.state, 若在模块中则为局部状态\n  rootState, // 等同于 store.state, 只存在于模块中\n  commit,    // 等同于 store.commit\n  dispatch,  // 等同于 store.dispatch\n  getters    // 等同于 store.getters\n}\n```\n\n\n## Axios的配置\n\n这个是我项目内Axios的配置，主要做了下面几件事情\n1. 5秒的超时验证\n2. POST的设置\n3. 统一的response封装。我通过接口传回的CODE码去判断该请求是否正确\n如果想去看更详细的解析可以通过[Axios的配置][1]\n\n``` javascript\n\nimport axios from 'axios'\nimport qs from 'qs'\nimport * as _ from './whole'    //alert\n\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://xxx.xxx.com';\n\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   _.toast(\"错误的传参\");\n  return Promise.reject(error);\n});\n\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    _.toast(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  _.toast(\"网络异常\");\n  return Promise.reject(error);\n});\n\nexport default axios;\n\n```\n\n## 完成一个请求操作\n\n下面介绍一个登陆action的操作，\n1. 在接口发起请求时跳出loading\n2. 接口请求成功结束loading，并保存数据进入store\n3. 接口请求失败抛出异常，结束loading。\n4. 返回一个Promise对象，方便继续操作。\n\n``` javascript\nexport const login = ({ commit },params) => {\n  _.busy();               //loding开始\n  return new Promise((resolve, reject)=> { \n    axios({\n      method:'get',\n      url: 'teacher/login',\n      params: {\n        moblie:params.mobile,\n        password:params.password,\n      }\n    })\n    .then((response) => {\n        commit(types.LOGIN,response.data.data); //获得的数据通过mutation，存入store中\n        _.leave();  //loding结束\n        resolve(response);\n    })\n    .catch((error) => {\n      _.leave();  //loding结束\n    })\n  });\n}\n\nconst mutations = {\n  [types.LOGIN](state, data){\n    state.token = data.token;\n  }\n}\n\n```\n\n\n\n``` javascript\n//调用action\n\nimport { mapActions,mapGetters  } from 'vuex'\n\nexport default {\n  methods:{\n    ...mapActions(['login']),                   //注入action\n    _login(){\n      let params = {\n        mobile:this.mobile,\n        pwd:this.password\n      }\n      this.login(params).\n      then(()=>{\n          this.$router.replace('/main/index');          //正确完成后进入主页\n      })\n      .catch((error)=>{                                 //错误则清空密码文本框\n          //可以在这里对Error进行捕获，然后根据错误类型进行相对应的处理\n          this.pwd = '';                           \n      });\n    }\n  }\n\n```\n\n## 一点说明\n因为在Vuex2中action可以直接拿到Store的值，所以我们可以通过 `rootState`这个参数拿到根的store值，通过`state`拿到当前模块中store的值\n都没必要在从getter里拿到值，然后通过params的方式传入。\n\n``` javascript\n\nexport const xxx = ({state,rootState,commit}) => {\n  return new Promise((resolve, reject)=> { \n    axios({\n      method:'get',\n      url: 'teacher/workbook/class/exercise',\n      params: {\n        \"token\":rootState.login.token,          //从store根中拿到数据\n        \"classCode\":state.code,                 //从当前模块中拿到数据\n        \"chapterId\":rootState.route.params.chapterId\n      }\n    })\n    .then((response) => {\n      commit(types.WORKBOOK_CLASS_EXERCISE,response.data.data)\n      resolve(response);\n    })\n  });\n}\n\n```\n这样是不是更方便我们去审查action的代码？\n\n\n\n  [1]: https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\n  [2]: https://vuex.vuejs.org/zh-cn/index.html\n  [3]: https://github.com/mzabriskie/axioss://vuex.vuejs.org/zh-cn/index.html\n  [4]: http://www.jianshu.com/p/063f7e490e9aoss://vuex.vuejs.org/zh-cn/index.html\n  [5]: https://vuex.vuejs.org/zh-cn/images/flow.png","slug":"Vuex2与Axios开发","published":1,"updated":"2017-02-01T09:38:06.046Z","_id":"ciympy1ml0000m8psh3cspiud","comments":1,"photos":[],"link":"","content":"<blockquote>\n<p>总结笔者最近在项目中使用Vuex2和Axios的总结和小技巧，方便日后查看。本人能力有限，如有错误还请大大们指正探讨😭。</p>\n</blockquote>\n<h1 id=\"阅读前须知\"><a href=\"#阅读前须知\" class=\"headerlink\" title=\"阅读前须知\"></a>阅读前须知</h1><p>接上一篇的<a href=\"https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\">Axios的配置</a>，阅读本文默认您已经掌握了Vuex2的基本语法、Axios的使用配置与方法、Promise的基本语法。（下面将放出参考链接方便大家在有不明白的地方查看）此篇主要叙述我在实际项目过程中Vuex2和Axios的组合操作。</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://vuex.vuejs.org/zh-cn/index.html\" target=\"_blank\" rel=\"external\">Vue单向数据流-Vuex2</a></li>\n<li><a href=\"https://github.com/mzabriskie/axioss://vuex.vuejs.org/zh-cn/index.html\" target=\"_blank\" rel=\"external\">Ajax库-Axios</a></li>\n<li><a href=\"http://www.jianshu.com/p/063f7e490e9aoss://vuex.vuejs.org/zh-cn/index.html\" target=\"_blank\" rel=\"external\">Promise介绍</a></li>\n</ul>\n<h2 id=\"Vuex2中的Actions\"><a href=\"#Vuex2中的Actions\" class=\"headerlink\" title=\"Vuex2中的Actions\"></a>Vuex2中的Actions</h2><p>在Vuex1中actions都可以统一使用<code>dispatch</code>去触发<code>mutation</code>，那时候去异步这种数据流没什么认识。在Vuex2中规定了,同步的方法使用<code>commit</code>去提交<code>mutation</code>，异步的方法（如接口请求，完成接口请求后的操作）只能通过分发action去触发，即使用<code>dispatch</code>。</p>\n<p><img src=\"https://vuex.vuejs.org/zh-cn/images/flow.png\" alt=\"此处输入图片的描述\"></p>\n<p>这里不经吐槽2句，Vuex2的Api还是蛮人性化的，对比Redux为了用好单向数据流，不得不引入一大堆诸如<code>react-redux</code>、<code>redux-saga</code>、<code>redux-thunk</code>…，对新上手的小白来说简直是一脸蒙蔽。上面这些库所带的功能，用Vuex2都可以完成（手动骄傲），当然Vuex2也是站在这些巨人的肩膀上。</p>\n<p>下面来看下<code>vuex2</code>中关于actions的API<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">类型: &#123; [type: string]: <span class=\"built_in\">Function</span> &#125;</div><div class=\"line\"></div><div class=\"line\">在 store 上注册 action。处理函数接受一个 context 对象，包含以下属性：</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">  state,     <span class=\"comment\">// 等同于 store.state, 若在模块中则为局部状态</span></div><div class=\"line\">  rootState, <span class=\"comment\">// 等同于 store.state, 只存在于模块中</span></div><div class=\"line\">  commit,    <span class=\"comment\">// 等同于 store.commit</span></div><div class=\"line\">  dispatch,  <span class=\"comment\">// 等同于 store.dispatch</span></div><div class=\"line\">  getters    <span class=\"comment\">// 等同于 store.getters</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Axios的配置\"><a href=\"#Axios的配置\" class=\"headerlink\" title=\"Axios的配置\"></a>Axios的配置</h2><p>这个是我项目内Axios的配置，主要做了下面几件事情</p>\n<ol>\n<li>5秒的超时验证</li>\n<li>POST的设置</li>\n<li>统一的response封装。我通过接口传回的CODE码去判断该请求是否正确<br>如果想去看更详细的解析可以通过<a href=\"https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\">Axios的配置</a></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'./whole'</span>    <span class=\"comment\">//alert</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://xxx.xxx.com'</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   _.toast(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    _.toast(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  _.toast(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> axios;</div></pre></td></tr></table></figure>\n<h2 id=\"完成一个请求操作\"><a href=\"#完成一个请求操作\" class=\"headerlink\" title=\"完成一个请求操作\"></a>完成一个请求操作</h2><p>下面介绍一个登陆action的操作，</p>\n<ol>\n<li>在接口发起请求时跳出loading</li>\n<li>接口请求成功结束loading，并保存数据进入store</li>\n<li>接口请求失败抛出异常，结束loading。</li>\n<li>返回一个Promise对象，方便继续操作。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> login = <span class=\"function\">(<span class=\"params\">&#123; commit &#125;,params</span>) =&gt;</span> &#123;</div><div class=\"line\">  _.busy();               <span class=\"comment\">//loding开始</span></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123; </div><div class=\"line\">    axios(&#123;</div><div class=\"line\">      <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">'teacher/login'</span>,</div><div class=\"line\">      <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">moblie</span>:params.mobile,</div><div class=\"line\">        <span class=\"attr\">password</span>:params.password,</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">        commit(types.LOGIN,response.data.data); <span class=\"comment\">//获得的数据通过mutation，存入store中</span></div><div class=\"line\">        _.leave();  <span class=\"comment\">//loding结束</span></div><div class=\"line\">        resolve(response);</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</div><div class=\"line\">      _.leave();  <span class=\"comment\">//loding结束</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> mutations = &#123;</div><div class=\"line\">  [types.LOGIN](state, data)&#123;</div><div class=\"line\">    state.token = data.token;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//调用action</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions,mapGetters  &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">methods</span>:&#123;</div><div class=\"line\">    ...mapActions([<span class=\"string\">'login'</span>]),                   <span class=\"comment\">//注入action</span></div><div class=\"line\">    _login()&#123;</div><div class=\"line\">      <span class=\"keyword\">let</span> params = &#123;</div><div class=\"line\">        <span class=\"attr\">mobile</span>:<span class=\"keyword\">this</span>.mobile,</div><div class=\"line\">        <span class=\"attr\">pwd</span>:<span class=\"keyword\">this</span>.password</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">this</span>.login(params).</div><div class=\"line\">      then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</div><div class=\"line\">          <span class=\"keyword\">this</span>.$router.replace(<span class=\"string\">'/main/index'</span>);          <span class=\"comment\">//正确完成后进入主页</span></div><div class=\"line\">      &#125;)</div><div class=\"line\">      .catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;                                 <span class=\"comment\">//错误则清空密码文本框</span></div><div class=\"line\">          <span class=\"comment\">//可以在这里对Error进行捕获，然后根据错误类型进行相对应的处理</span></div><div class=\"line\">          <span class=\"keyword\">this</span>.pwd = <span class=\"string\">''</span>;                           </div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"一点说明\"><a href=\"#一点说明\" class=\"headerlink\" title=\"一点说明\"></a>一点说明</h2><p>因为在Vuex2中action可以直接拿到Store的值，所以我们可以通过 <code>rootState</code>这个参数拿到根的store值，通过<code>state</code>拿到当前模块中store的值<br>都没必要在从getter里拿到值，然后通过params的方式传入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> xxx = <span class=\"function\">(<span class=\"params\">&#123;state,rootState,commit&#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123; </div><div class=\"line\">    axios(&#123;</div><div class=\"line\">      <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">'teacher/workbook/class/exercise'</span>,</div><div class=\"line\">      <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">        <span class=\"string\">\"token\"</span>:rootState.login.token,          <span class=\"comment\">//从store根中拿到数据</span></div><div class=\"line\">        <span class=\"string\">\"classCode\"</span>:state.code,                 <span class=\"comment\">//从当前模块中拿到数据</span></div><div class=\"line\">        <span class=\"string\">\"chapterId\"</span>:rootState.route.params.chapterId</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">      commit(types.WORKBOOK_CLASS_EXERCISE,response.data.data)</div><div class=\"line\">      resolve(response);</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样是不是更方便我们去审查action的代码？</p>\n","excerpt":"","more":"<blockquote>\n<p>总结笔者最近在项目中使用Vuex2和Axios的总结和小技巧，方便日后查看。本人能力有限，如有错误还请大大们指正探讨😭。</p>\n</blockquote>\n<h1 id=\"阅读前须知\"><a href=\"#阅读前须知\" class=\"headerlink\" title=\"阅读前须知\"></a>阅读前须知</h1><p>接上一篇的<a href=\"https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\">Axios的配置</a>，阅读本文默认您已经掌握了Vuex2的基本语法、Axios的使用配置与方法、Promise的基本语法。（下面将放出参考链接方便大家在有不明白的地方查看）此篇主要叙述我在实际项目过程中Vuex2和Axios的组合操作。</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://vuex.vuejs.org/zh-cn/index.html\">Vue单向数据流-Vuex2</a></li>\n<li><a href=\"https://github.com/mzabriskie/axioss://vuex.vuejs.org/zh-cn/index.html\">Ajax库-Axios</a></li>\n<li><a href=\"http://www.jianshu.com/p/063f7e490e9aoss://vuex.vuejs.org/zh-cn/index.html\">Promise介绍</a></li>\n</ul>\n<h2 id=\"Vuex2中的Actions\"><a href=\"#Vuex2中的Actions\" class=\"headerlink\" title=\"Vuex2中的Actions\"></a>Vuex2中的Actions</h2><p>在Vuex1中actions都可以统一使用<code>dispatch</code>去触发<code>mutation</code>，那时候去异步这种数据流没什么认识。在Vuex2中规定了,同步的方法使用<code>commit</code>去提交<code>mutation</code>，异步的方法（如接口请求，完成接口请求后的操作）只能通过分发action去触发，即使用<code>dispatch</code>。</p>\n<p><img src=\"https://vuex.vuejs.org/zh-cn/images/flow.png\" alt=\"此处输入图片的描述\"></p>\n<p>这里不经吐槽2句，Vuex2的Api还是蛮人性化的，对比Redux为了用好单向数据流，不得不引入一大堆诸如<code>react-redux</code>、<code>redux-saga</code>、<code>redux-thunk</code>…，对新上手的小白来说简直是一脸蒙蔽。上面这些库所带的功能，用Vuex2都可以完成（手动骄傲），当然Vuex2也是站在这些巨人的肩膀上。</p>\n<p>下面来看下<code>vuex2</code>中关于actions的API<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">类型: &#123; [type: string]: <span class=\"built_in\">Function</span> &#125;</div><div class=\"line\"></div><div class=\"line\">在 store 上注册 action。处理函数接受一个 context 对象，包含以下属性：</div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">  state,     <span class=\"comment\">// 等同于 store.state, 若在模块中则为局部状态</span></div><div class=\"line\">  rootState, <span class=\"comment\">// 等同于 store.state, 只存在于模块中</span></div><div class=\"line\">  commit,    <span class=\"comment\">// 等同于 store.commit</span></div><div class=\"line\">  dispatch,  <span class=\"comment\">// 等同于 store.dispatch</span></div><div class=\"line\">  getters    <span class=\"comment\">// 等同于 store.getters</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Axios的配置\"><a href=\"#Axios的配置\" class=\"headerlink\" title=\"Axios的配置\"></a>Axios的配置</h2><p>这个是我项目内Axios的配置，主要做了下面几件事情</p>\n<ol>\n<li>5秒的超时验证</li>\n<li>POST的设置</li>\n<li>统一的response封装。我通过接口传回的CODE码去判断该请求是否正确<br>如果想去看更详细的解析可以通过<a href=\"https://ygxdxx.coding.me/2017/01/29/Axios%E7%9A%84%E9%85%8D%E7%BD%AE/\">Axios的配置</a></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'./whole'</span>    <span class=\"comment\">//alert</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://xxx.xxx.com'</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   _.toast(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    _.toast(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  _.toast(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> axios;</div></pre></td></tr></table></figure>\n<h2 id=\"完成一个请求操作\"><a href=\"#完成一个请求操作\" class=\"headerlink\" title=\"完成一个请求操作\"></a>完成一个请求操作</h2><p>下面介绍一个登陆action的操作，</p>\n<ol>\n<li>在接口发起请求时跳出loading</li>\n<li>接口请求成功结束loading，并保存数据进入store</li>\n<li>接口请求失败抛出异常，结束loading。</li>\n<li>返回一个Promise对象，方便继续操作。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> login = <span class=\"function\">(<span class=\"params\">&#123; commit &#125;,params</span>) =&gt;</span> &#123;</div><div class=\"line\">  _.busy();               <span class=\"comment\">//loding开始</span></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123; </div><div class=\"line\">    axios(&#123;</div><div class=\"line\">      <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">'teacher/login'</span>,</div><div class=\"line\">      <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">moblie</span>:params.mobile,</div><div class=\"line\">        <span class=\"attr\">password</span>:params.password,</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">        commit(types.LOGIN,response.data.data); <span class=\"comment\">//获得的数据通过mutation，存入store中</span></div><div class=\"line\">        _.leave();  <span class=\"comment\">//loding结束</span></div><div class=\"line\">        resolve(response);</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</div><div class=\"line\">      _.leave();  <span class=\"comment\">//loding结束</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> mutations = &#123;</div><div class=\"line\">  [types.LOGIN](state, data)&#123;</div><div class=\"line\">    state.token = data.token;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//调用action</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions,mapGetters  &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">methods</span>:&#123;</div><div class=\"line\">    ...mapActions([<span class=\"string\">'login'</span>]),                   <span class=\"comment\">//注入action</span></div><div class=\"line\">    _login()&#123;</div><div class=\"line\">      <span class=\"keyword\">let</span> params = &#123;</div><div class=\"line\">        <span class=\"attr\">mobile</span>:<span class=\"keyword\">this</span>.mobile,</div><div class=\"line\">        <span class=\"attr\">pwd</span>:<span class=\"keyword\">this</span>.password</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">this</span>.login(params).</div><div class=\"line\">      then(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</div><div class=\"line\">          <span class=\"keyword\">this</span>.$router.replace(<span class=\"string\">'/main/index'</span>);          <span class=\"comment\">//正确完成后进入主页</span></div><div class=\"line\">      &#125;)</div><div class=\"line\">      .catch(<span class=\"function\">(<span class=\"params\">error</span>)=&gt;</span>&#123;                                 <span class=\"comment\">//错误则清空密码文本框</span></div><div class=\"line\">          <span class=\"comment\">//可以在这里对Error进行捕获，然后根据错误类型进行相对应的处理</span></div><div class=\"line\">          <span class=\"keyword\">this</span>.pwd = <span class=\"string\">''</span>;                           </div><div class=\"line\">      &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"一点说明\"><a href=\"#一点说明\" class=\"headerlink\" title=\"一点说明\"></a>一点说明</h2><p>因为在Vuex2中action可以直接拿到Store的值，所以我们可以通过 <code>rootState</code>这个参数拿到根的store值，通过<code>state</code>拿到当前模块中store的值<br>都没必要在从getter里拿到值，然后通过params的方式传入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> xxx = <span class=\"function\">(<span class=\"params\">&#123;state,rootState,commit&#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span> &#123; </div><div class=\"line\">    axios(&#123;</div><div class=\"line\">      <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">'teacher/workbook/class/exercise'</span>,</div><div class=\"line\">      <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">        <span class=\"string\">\"token\"</span>:rootState.login.token,          <span class=\"comment\">//从store根中拿到数据</span></div><div class=\"line\">        <span class=\"string\">\"classCode\"</span>:state.code,                 <span class=\"comment\">//从当前模块中拿到数据</span></div><div class=\"line\">        <span class=\"string\">\"chapterId\"</span>:rootState.route.params.chapterId</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">      commit(types.WORKBOOK_CLASS_EXERCISE,response.data.data)</div><div class=\"line\">      resolve(response);</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这样是不是更方便我们去审查action的代码？</p>\n"},{"layout":"_posts","title":"Axios的配置","date":"2017-01-29T12:25:08.000Z","thumbnail":"http://okkula0y9.bkt.clouddn.com/20160130.jpg","_content":"\n> 以前写Vue项目的时候都是使用vue-resource做为项目ajax库，在11月份的某一天尤大微博的更新表示ajax的库应该是通用的，放弃了对vue-resource的技术支持，推荐使用[axios][1]。\n\n![此处输入图片的描述][2]\n既然尤大推荐的应该有过人之处，好吧于是在新的项目上开始使用Axios,开启这段学习（踩坑）的历程。\n\n\n  [1]: https://github.com/mzabriskie/axios\n  [2]: http://upload-images.jianshu.io/upload_images/1987062-b3255d564903d3d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n  \n# 安装\n``` javascript\n npm install axios\n```\n\n# 使用\nAxios和其他的ajax库都是很类似的，提供了2种使用的方式一种是直接使用实例方法的如：\n下面是实例的所有可用方法，方法中的config会与axios实例中的config合并。（实例可以将一些通用的config先配置好）\n``` javascript\n//axios.get\n//axios.post\n\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\n#   Config 配置\nAxios的配置参数很多，我们来一一了解\n\n- url —— 用来向服务器发送请求的url\n- method —— 请求方法，默认是GET方法\n-  baseURL —— 基础URL路径，假如url不是绝对路径，如https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL + url。\n-  transformRequest —— transformRequest方法允许在请求发送到服务器之前修改该请求，此方法只适用于PUT、POST和PATCH方法中。而且，此方法最后必须返回一个string、ArrayBuffer或者Stream。\n-  transformResponse —— transformResponse方法允许在数据传递到then/catch之前修改response数据。此方法最后也要返回数据。\n- headers —— 发送自定义Headers头文件，头文件中包含了http请求的各种信息。\n-  params —— params是发送请求的查询参数对象，对象中的数据会被拼接成url?param1=value1&param2=value2。\nparamsSerializer —— params参数序列化器。\n- data —— data是在发送POST、PUT或者PATCH请求的数据对象。\n- timeout —— 请求超时设置，单位为毫秒\n- withCredentials —— 表明是否有跨域请求需要用到证书\n- adapter —— adapter允许用户处理更易于测试的请求。返回一个Promise和一个有效的response\n- auth —— auth表明提供凭证用于完成http的身份验证。这将会在headers中设置一个Authorization授权信息。自定义Authorization授权要设置在headers中。\n- responseType —— 表示服务器将返回响应的数据类型，有arraybuffer、blob、document、json、text、stream这6个类型，默认是json类似数据。\n- xsrfCookieName —— 用作 xsrf token 值的 cookie 名称\n- xsrfHeaderName —— 带有 xsrf token 值 http head 名称\n- onUploadProgress —— 允许在上传过程中的做一些操作\n- onDownloadProgress —— 允许在下载过程中的做一些操作\n- maxContentLength —— 定义了接收到的response响应数据的最大长度。\n- validateStatus —— validateStatus定义了根据HTTP响应状态码决定是否接收或拒绝获取到的promise。如果 validateStatus 返回 true (或设置为 null 或 undefined ),promise将被接收;否则,promise将被拒绝。\n- maxRedirects —— maxRedirects定义了在node.js中redirect的最大值，如果设置为0，则没有redirect。\n- httpAgent —— 定义在使用http请求时的代理\n- httpsAgent —— 定义在使用https请求时的代理\n- proxy —— proxy定义代理服务器的主机名和端口，auth\n- cancelToken —— cancelToken定义一个 cancel token 用于取消请求\n\n\n# Response 返回\n当我们ajax获取数据成功后会返回一个response对象，它包含了以下内容\n``` javascript\n\n{\n  // 服务器返回的数据\n  data: {},\n  // HTTP状态吗\n  status: 200,\n  // 服务器返回的消息\n  statusText: 'OK',\n  // 返回头\n  headers: {},\n  // 在返回我们的配置\n  config: {}\n}\n```\n\n# 统一Config配置\n在接口测试中，我们经常需要切换线上环境和测试环境，这里我们都可以通过Config来配置，这样我们所有的发起的请求都是通过这个基本的URL走了。\n\n``` javascript\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://www.xxxx.xxx/api';\n// axios.defaults.baseURL = 'http://192.168.1.129:8383';\n```\n\n\n# Interceptors 拦截器\n这里我必须重点介绍，在我们发起大量的请求时候，需要对请求做统一的处理那就用到它了。笔者在使用了`vue-resource`和`axios`之后亲身比较，`axios`的配置更加人性化。\n官方的API上这样介绍\n> You can intercept requests or responses before they are handled by then or catch.\n您可以拦截请求或响应之前，他们处理的操作或者异常\n\n\n## request统一处理操作\n如果是POST的请求，配置中可不能用`params`字段了，需要使用`data`字段。\n这里有个小地方需要注意，POST的传参需要序列化，不然服务端不会正确的接收哦，会报错。所以这里我们要对request的数据进行一次序列化。这里我用了`qs`,大家需要install一下\n\n``` javascript\nimport axios from 'axios'\nimport qs from 'qs'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   alert(\"错误的传参\");\n  return Promise.reject(error);\n});\n```\n\n\n## response统一处理操作\n也就是说我们可以统一的在发起请求前，或者获得数据，对其进行统一的操作。这点非常的高效，在笔者的项目中，接口会返回一个code,就和微信API一样，code为200代表返回请求数据正确为其它时就自动跳出弹窗打印消息即可。\n\n``` javascript\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    alert(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  alert(\"网络异常\");\n  return Promise.reject(error);\n});\n```\n\n如果发生这些错误了我要结束当前的Promise所以返回一个`Promise.reject(res)`，停止Promise队列下面的操作,如果有对于Promise不熟悉的童鞋请自行搜索`Promise`(这里还遇到了一个小坑最后会介绍)\n\n\n# 我的配置\n好了介绍了这么多介绍下我的axios配置的文件设置吧,这个文件名是`config/http.js`\n``` javascript\n\nimport axios from 'axios'\nimport qs from 'qs'\nimport * as _ from './whole'\n\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://www.guinaben.com:8070';\n// axios.defaults.baseURL = 'http://192.168.1.129:8383';\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   _.toast(\"错误的传参\");\n  return Promise.reject(error);\n});\n\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    _.toast(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  _.toast(\"网络异常\");\n  return Promise.reject(error);\n});\n\nexport default axios;\n```\n\n\n发起的请求\n``` javascript\nimport axios from 'config/http'\n\naxios({\n  method:'get',\n  url: 'xxxx/xxxxx',\n  params: {\n    \"textbook_id\":id,\n    \"token\":token\n  }\n})\n.then((response) => {\n  resolve(response);\n})\n\n\naxios({\n  method:'post',\n  url: 'teacher/pwd/resetByMobile',\n  data: {\n   \"textbook_id\":id,\n    \"token\":token\n  }\n})\n.then((response) => {\n    resolve(response);\n})\n  \n  \n```\n\n# 一定要看\n因为这里我使用的`Promise`,所以在安卓4.4.3一下的手机还是不支持Promise的，所以会报错。需要引入` npm install babel-polyfill`和` npm install babel-runtime`，在入口文件上加上即可。\n``` javascript\nimport 'babel-polyfill' \n```\n\n# 最后\n下一篇将带来Vuex2和axios的配合，希望此篇能带给大家帮助。","source":"_posts/Axios的配置.md","raw":"---\nlayout: _posts\ntitle: 'Axios的配置'\ndate: 2017-01-29 20:25:08\ntags: [Axio,Vue]\nthumbnail: http://okkula0y9.bkt.clouddn.com/20160130.jpg\n---\n\n> 以前写Vue项目的时候都是使用vue-resource做为项目ajax库，在11月份的某一天尤大微博的更新表示ajax的库应该是通用的，放弃了对vue-resource的技术支持，推荐使用[axios][1]。\n\n![此处输入图片的描述][2]\n既然尤大推荐的应该有过人之处，好吧于是在新的项目上开始使用Axios,开启这段学习（踩坑）的历程。\n\n\n  [1]: https://github.com/mzabriskie/axios\n  [2]: http://upload-images.jianshu.io/upload_images/1987062-b3255d564903d3d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\n  \n# 安装\n``` javascript\n npm install axios\n```\n\n# 使用\nAxios和其他的ajax库都是很类似的，提供了2种使用的方式一种是直接使用实例方法的如：\n下面是实例的所有可用方法，方法中的config会与axios实例中的config合并。（实例可以将一些通用的config先配置好）\n``` javascript\n//axios.get\n//axios.post\n\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\n#   Config 配置\nAxios的配置参数很多，我们来一一了解\n\n- url —— 用来向服务器发送请求的url\n- method —— 请求方法，默认是GET方法\n-  baseURL —— 基础URL路径，假如url不是绝对路径，如https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL + url。\n-  transformRequest —— transformRequest方法允许在请求发送到服务器之前修改该请求，此方法只适用于PUT、POST和PATCH方法中。而且，此方法最后必须返回一个string、ArrayBuffer或者Stream。\n-  transformResponse —— transformResponse方法允许在数据传递到then/catch之前修改response数据。此方法最后也要返回数据。\n- headers —— 发送自定义Headers头文件，头文件中包含了http请求的各种信息。\n-  params —— params是发送请求的查询参数对象，对象中的数据会被拼接成url?param1=value1&param2=value2。\nparamsSerializer —— params参数序列化器。\n- data —— data是在发送POST、PUT或者PATCH请求的数据对象。\n- timeout —— 请求超时设置，单位为毫秒\n- withCredentials —— 表明是否有跨域请求需要用到证书\n- adapter —— adapter允许用户处理更易于测试的请求。返回一个Promise和一个有效的response\n- auth —— auth表明提供凭证用于完成http的身份验证。这将会在headers中设置一个Authorization授权信息。自定义Authorization授权要设置在headers中。\n- responseType —— 表示服务器将返回响应的数据类型，有arraybuffer、blob、document、json、text、stream这6个类型，默认是json类似数据。\n- xsrfCookieName —— 用作 xsrf token 值的 cookie 名称\n- xsrfHeaderName —— 带有 xsrf token 值 http head 名称\n- onUploadProgress —— 允许在上传过程中的做一些操作\n- onDownloadProgress —— 允许在下载过程中的做一些操作\n- maxContentLength —— 定义了接收到的response响应数据的最大长度。\n- validateStatus —— validateStatus定义了根据HTTP响应状态码决定是否接收或拒绝获取到的promise。如果 validateStatus 返回 true (或设置为 null 或 undefined ),promise将被接收;否则,promise将被拒绝。\n- maxRedirects —— maxRedirects定义了在node.js中redirect的最大值，如果设置为0，则没有redirect。\n- httpAgent —— 定义在使用http请求时的代理\n- httpsAgent —— 定义在使用https请求时的代理\n- proxy —— proxy定义代理服务器的主机名和端口，auth\n- cancelToken —— cancelToken定义一个 cancel token 用于取消请求\n\n\n# Response 返回\n当我们ajax获取数据成功后会返回一个response对象，它包含了以下内容\n``` javascript\n\n{\n  // 服务器返回的数据\n  data: {},\n  // HTTP状态吗\n  status: 200,\n  // 服务器返回的消息\n  statusText: 'OK',\n  // 返回头\n  headers: {},\n  // 在返回我们的配置\n  config: {}\n}\n```\n\n# 统一Config配置\n在接口测试中，我们经常需要切换线上环境和测试环境，这里我们都可以通过Config来配置，这样我们所有的发起的请求都是通过这个基本的URL走了。\n\n``` javascript\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://www.xxxx.xxx/api';\n// axios.defaults.baseURL = 'http://192.168.1.129:8383';\n```\n\n\n# Interceptors 拦截器\n这里我必须重点介绍，在我们发起大量的请求时候，需要对请求做统一的处理那就用到它了。笔者在使用了`vue-resource`和`axios`之后亲身比较，`axios`的配置更加人性化。\n官方的API上这样介绍\n> You can intercept requests or responses before they are handled by then or catch.\n您可以拦截请求或响应之前，他们处理的操作或者异常\n\n\n## request统一处理操作\n如果是POST的请求，配置中可不能用`params`字段了，需要使用`data`字段。\n这里有个小地方需要注意，POST的传参需要序列化，不然服务端不会正确的接收哦，会报错。所以这里我们要对request的数据进行一次序列化。这里我用了`qs`,大家需要install一下\n\n``` javascript\nimport axios from 'axios'\nimport qs from 'qs'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   alert(\"错误的传参\");\n  return Promise.reject(error);\n});\n```\n\n\n## response统一处理操作\n也就是说我们可以统一的在发起请求前，或者获得数据，对其进行统一的操作。这点非常的高效，在笔者的项目中，接口会返回一个code,就和微信API一样，code为200代表返回请求数据正确为其它时就自动跳出弹窗打印消息即可。\n\n``` javascript\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    alert(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  alert(\"网络异常\");\n  return Promise.reject(error);\n});\n```\n\n如果发生这些错误了我要结束当前的Promise所以返回一个`Promise.reject(res)`，停止Promise队列下面的操作,如果有对于Promise不熟悉的童鞋请自行搜索`Promise`(这里还遇到了一个小坑最后会介绍)\n\n\n# 我的配置\n好了介绍了这么多介绍下我的axios配置的文件设置吧,这个文件名是`config/http.js`\n``` javascript\n\nimport axios from 'axios'\nimport qs from 'qs'\nimport * as _ from './whole'\n\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://www.guinaben.com:8070';\n// axios.defaults.baseURL = 'http://192.168.1.129:8383';\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n   _.toast(\"错误的传参\");\n  return Promise.reject(error);\n});\n\n//code状态码200判断\naxios.interceptors.response.use((res) =>{\n  if(res.data.code != '200'){\n    _.toast(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  _.toast(\"网络异常\");\n  return Promise.reject(error);\n});\n\nexport default axios;\n```\n\n\n发起的请求\n``` javascript\nimport axios from 'config/http'\n\naxios({\n  method:'get',\n  url: 'xxxx/xxxxx',\n  params: {\n    \"textbook_id\":id,\n    \"token\":token\n  }\n})\n.then((response) => {\n  resolve(response);\n})\n\n\naxios({\n  method:'post',\n  url: 'teacher/pwd/resetByMobile',\n  data: {\n   \"textbook_id\":id,\n    \"token\":token\n  }\n})\n.then((response) => {\n    resolve(response);\n})\n  \n  \n```\n\n# 一定要看\n因为这里我使用的`Promise`,所以在安卓4.4.3一下的手机还是不支持Promise的，所以会报错。需要引入` npm install babel-polyfill`和` npm install babel-runtime`，在入口文件上加上即可。\n``` javascript\nimport 'babel-polyfill' \n```\n\n# 最后\n下一篇将带来Vuex2和axios的配合，希望此篇能带给大家帮助。","slug":"Axios的配置","published":1,"updated":"2017-02-01T09:00:36.422Z","_id":"ciympy1ms0001m8psaxapjqcg","comments":1,"photos":[],"link":"","content":"<blockquote>\n<p>以前写Vue项目的时候都是使用vue-resource做为项目ajax库，在11月份的某一天尤大微博的更新表示ajax的库应该是通用的，放弃了对vue-resource的技术支持，推荐使用<a href=\"https://github.com/mzabriskie/axios\" target=\"_blank\" rel=\"external\">axios</a>。</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1987062-b3255d564903d3d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"此处输入图片的描述\"><br>既然尤大推荐的应该有过人之处，好吧于是在新的项目上开始使用Axios,开启这段学习（踩坑）的历程。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install axios</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>Axios和其他的ajax库都是很类似的，提供了2种使用的方式一种是直接使用实例方法的如：<br>下面是实例的所有可用方法，方法中的config会与axios实例中的config合并。（实例可以将一些通用的config先配置好）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//axios.get</span></div><div class=\"line\"><span class=\"comment\">//axios.post</span></div><div class=\"line\"></div><div class=\"line\">axios.get(<span class=\"string\">'/user?ID=12345'</span>)</div><div class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(response);</div><div class=\"line\">  &#125;)</div><div class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(error);</div><div class=\"line\">  &#125;);</div></pre></td></tr></table></figure></p>\n<h1 id=\"Config-配置\"><a href=\"#Config-配置\" class=\"headerlink\" title=\"Config 配置\"></a>Config 配置</h1><p>Axios的配置参数很多，我们来一一了解</p>\n<ul>\n<li>url —— 用来向服务器发送请求的url</li>\n<li>method —— 请求方法，默认是GET方法</li>\n<li>baseURL —— 基础URL路径，假如url不是绝对路径，如<a href=\"https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL\" target=\"_blank\" rel=\"external\">https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL</a> + url。</li>\n<li>transformRequest —— transformRequest方法允许在请求发送到服务器之前修改该请求，此方法只适用于PUT、POST和PATCH方法中。而且，此方法最后必须返回一个string、ArrayBuffer或者Stream。</li>\n<li>transformResponse —— transformResponse方法允许在数据传递到then/catch之前修改response数据。此方法最后也要返回数据。</li>\n<li>headers —— 发送自定义Headers头文件，头文件中包含了http请求的各种信息。</li>\n<li>params —— params是发送请求的查询参数对象，对象中的数据会被拼接成url?param1=value1&amp;param2=value2。<br>paramsSerializer —— params参数序列化器。</li>\n<li>data —— data是在发送POST、PUT或者PATCH请求的数据对象。</li>\n<li>timeout —— 请求超时设置，单位为毫秒</li>\n<li>withCredentials —— 表明是否有跨域请求需要用到证书</li>\n<li>adapter —— adapter允许用户处理更易于测试的请求。返回一个Promise和一个有效的response</li>\n<li>auth —— auth表明提供凭证用于完成http的身份验证。这将会在headers中设置一个Authorization授权信息。自定义Authorization授权要设置在headers中。</li>\n<li>responseType —— 表示服务器将返回响应的数据类型，有arraybuffer、blob、document、json、text、stream这6个类型，默认是json类似数据。</li>\n<li>xsrfCookieName —— 用作 xsrf token 值的 cookie 名称</li>\n<li>xsrfHeaderName —— 带有 xsrf token 值 http head 名称</li>\n<li>onUploadProgress —— 允许在上传过程中的做一些操作</li>\n<li>onDownloadProgress —— 允许在下载过程中的做一些操作</li>\n<li>maxContentLength —— 定义了接收到的response响应数据的最大长度。</li>\n<li>validateStatus —— validateStatus定义了根据HTTP响应状态码决定是否接收或拒绝获取到的promise。如果 validateStatus 返回 true (或设置为 null 或 undefined ),promise将被接收;否则,promise将被拒绝。</li>\n<li>maxRedirects —— maxRedirects定义了在node.js中redirect的最大值，如果设置为0，则没有redirect。</li>\n<li>httpAgent —— 定义在使用http请求时的代理</li>\n<li>httpsAgent —— 定义在使用https请求时的代理</li>\n<li>proxy —— proxy定义代理服务器的主机名和端口，auth</li>\n<li>cancelToken —— cancelToken定义一个 cancel token 用于取消请求</li>\n</ul>\n<h1 id=\"Response-返回\"><a href=\"#Response-返回\" class=\"headerlink\" title=\"Response 返回\"></a>Response 返回</h1><p>当我们ajax获取数据成功后会返回一个response对象，它包含了以下内容<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"comment\">// 服务器返回的数据</span></div><div class=\"line\">  data: &#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// HTTP状态吗</span></div><div class=\"line\">  status: <span class=\"number\">200</span>,</div><div class=\"line\">  <span class=\"comment\">// 服务器返回的消息</span></div><div class=\"line\">  statusText: <span class=\"string\">'OK'</span>,</div><div class=\"line\">  <span class=\"comment\">// 返回头</span></div><div class=\"line\">  headers: &#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// 在返回我们的配置</span></div><div class=\"line\">  config: &#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"统一Config配置\"><a href=\"#统一Config配置\" class=\"headerlink\" title=\"统一Config配置\"></a>统一Config配置</h1><p>在接口测试中，我们经常需要切换线上环境和测试环境，这里我们都可以通过Config来配置，这样我们所有的发起的请求都是通过这个基本的URL走了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://www.xxxx.xxx/api'</span>;</div><div class=\"line\"><span class=\"comment\">// axios.defaults.baseURL = 'http://192.168.1.129:8383';</span></div></pre></td></tr></table></figure>\n<h1 id=\"Interceptors-拦截器\"><a href=\"#Interceptors-拦截器\" class=\"headerlink\" title=\"Interceptors 拦截器\"></a>Interceptors 拦截器</h1><p>这里我必须重点介绍，在我们发起大量的请求时候，需要对请求做统一的处理那就用到它了。笔者在使用了<code>vue-resource</code>和<code>axios</code>之后亲身比较，<code>axios</code>的配置更加人性化。<br>官方的API上这样介绍</p>\n<blockquote>\n<p>You can intercept requests or responses before they are handled by then or catch.<br>您可以拦截请求或响应之前，他们处理的操作或者异常</p>\n</blockquote>\n<h2 id=\"request统一处理操作\"><a href=\"#request统一处理操作\" class=\"headerlink\" title=\"request统一处理操作\"></a>request统一处理操作</h2><p>如果是POST的请求，配置中可不能用<code>params</code>字段了，需要使用<code>data</code>字段。<br>这里有个小地方需要注意，POST的传参需要序列化，不然服务端不会正确的接收哦，会报错。所以这里我们要对request的数据进行一次序列化。这里我用了<code>qs</code>,大家需要install一下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   alert(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"response统一处理操作\"><a href=\"#response统一处理操作\" class=\"headerlink\" title=\"response统一处理操作\"></a>response统一处理操作</h2><p>也就是说我们可以统一的在发起请求前，或者获得数据，对其进行统一的操作。这点非常的高效，在笔者的项目中，接口会返回一个code,就和微信API一样，code为200代表返回请求数据正确为其它时就自动跳出弹窗打印消息即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    alert(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  alert(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>如果发生这些错误了我要结束当前的Promise所以返回一个<code>Promise.reject(res)</code>，停止Promise队列下面的操作,如果有对于Promise不熟悉的童鞋请自行搜索<code>Promise</code>(这里还遇到了一个小坑最后会介绍)</p>\n<h1 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的配置</h1><p>好了介绍了这么多介绍下我的axios配置的文件设置吧,这个文件名是<code>config/http.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'./whole'</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://www.guinaben.com:8070'</span>;</div><div class=\"line\"><span class=\"comment\">// axios.defaults.baseURL = 'http://192.168.1.129:8383';</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   _.toast(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    _.toast(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  _.toast(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> axios;</div></pre></td></tr></table></figure></p>\n<p>发起的请求<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'config/http'</span></div><div class=\"line\"></div><div class=\"line\">axios(&#123;</div><div class=\"line\">  <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">'xxxx/xxxxx'</span>,</div><div class=\"line\">  <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"textbook_id\"</span>:id,</div><div class=\"line\">    <span class=\"string\">\"token\"</span>:token</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">  resolve(response);</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">axios(&#123;</div><div class=\"line\">  <span class=\"attr\">method</span>:<span class=\"string\">'post'</span>,</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">'teacher/pwd/resetByMobile'</span>,</div><div class=\"line\">  <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">   <span class=\"string\">\"textbook_id\"</span>:id,</div><div class=\"line\">    <span class=\"string\">\"token\"</span>:token</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">    resolve(response);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h1 id=\"一定要看\"><a href=\"#一定要看\" class=\"headerlink\" title=\"一定要看\"></a>一定要看</h1><p>因为这里我使用的<code>Promise</code>,所以在安卓4.4.3一下的手机还是不支持Promise的，所以会报错。需要引入<code>npm install babel-polyfill</code>和<code>npm install babel-runtime</code>，在入口文件上加上即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>下一篇将带来Vuex2和axios的配合，希望此篇能带给大家帮助。</p>\n","excerpt":"","more":"<blockquote>\n<p>以前写Vue项目的时候都是使用vue-resource做为项目ajax库，在11月份的某一天尤大微博的更新表示ajax的库应该是通用的，放弃了对vue-resource的技术支持，推荐使用<a href=\"https://github.com/mzabriskie/axios\">axios</a>。</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1987062-b3255d564903d3d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"此处输入图片的描述\"><br>既然尤大推荐的应该有过人之处，好吧于是在新的项目上开始使用Axios,开启这段学习（踩坑）的历程。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install axios</div></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>Axios和其他的ajax库都是很类似的，提供了2种使用的方式一种是直接使用实例方法的如：<br>下面是实例的所有可用方法，方法中的config会与axios实例中的config合并。（实例可以将一些通用的config先配置好）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//axios.get</span></div><div class=\"line\"><span class=\"comment\">//axios.post</span></div><div class=\"line\"></div><div class=\"line\">axios.get(<span class=\"string\">'/user?ID=12345'</span>)</div><div class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(response);</div><div class=\"line\">  &#125;)</div><div class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(error);</div><div class=\"line\">  &#125;);</div></pre></td></tr></table></figure></p>\n<h1 id=\"Config-配置\"><a href=\"#Config-配置\" class=\"headerlink\" title=\"Config 配置\"></a>Config 配置</h1><p>Axios的配置参数很多，我们来一一了解</p>\n<ul>\n<li>url —— 用来向服务器发送请求的url</li>\n<li>method —— 请求方法，默认是GET方法</li>\n<li>baseURL —— 基础URL路径，假如url不是绝对路径，如<a href=\"https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL\">https://some-domain.com/api/v1/login?name=jack,那么向服务器发送请求的URL将会是baseURL</a> + url。</li>\n<li>transformRequest —— transformRequest方法允许在请求发送到服务器之前修改该请求，此方法只适用于PUT、POST和PATCH方法中。而且，此方法最后必须返回一个string、ArrayBuffer或者Stream。</li>\n<li>transformResponse —— transformResponse方法允许在数据传递到then/catch之前修改response数据。此方法最后也要返回数据。</li>\n<li>headers —— 发送自定义Headers头文件，头文件中包含了http请求的各种信息。</li>\n<li>params —— params是发送请求的查询参数对象，对象中的数据会被拼接成url?param1=value1&amp;param2=value2。<br>paramsSerializer —— params参数序列化器。</li>\n<li>data —— data是在发送POST、PUT或者PATCH请求的数据对象。</li>\n<li>timeout —— 请求超时设置，单位为毫秒</li>\n<li>withCredentials —— 表明是否有跨域请求需要用到证书</li>\n<li>adapter —— adapter允许用户处理更易于测试的请求。返回一个Promise和一个有效的response</li>\n<li>auth —— auth表明提供凭证用于完成http的身份验证。这将会在headers中设置一个Authorization授权信息。自定义Authorization授权要设置在headers中。</li>\n<li>responseType —— 表示服务器将返回响应的数据类型，有arraybuffer、blob、document、json、text、stream这6个类型，默认是json类似数据。</li>\n<li>xsrfCookieName —— 用作 xsrf token 值的 cookie 名称</li>\n<li>xsrfHeaderName —— 带有 xsrf token 值 http head 名称</li>\n<li>onUploadProgress —— 允许在上传过程中的做一些操作</li>\n<li>onDownloadProgress —— 允许在下载过程中的做一些操作</li>\n<li>maxContentLength —— 定义了接收到的response响应数据的最大长度。</li>\n<li>validateStatus —— validateStatus定义了根据HTTP响应状态码决定是否接收或拒绝获取到的promise。如果 validateStatus 返回 true (或设置为 null 或 undefined ),promise将被接收;否则,promise将被拒绝。</li>\n<li>maxRedirects —— maxRedirects定义了在node.js中redirect的最大值，如果设置为0，则没有redirect。</li>\n<li>httpAgent —— 定义在使用http请求时的代理</li>\n<li>httpsAgent —— 定义在使用https请求时的代理</li>\n<li>proxy —— proxy定义代理服务器的主机名和端口，auth</li>\n<li>cancelToken —— cancelToken定义一个 cancel token 用于取消请求</li>\n</ul>\n<h1 id=\"Response-返回\"><a href=\"#Response-返回\" class=\"headerlink\" title=\"Response 返回\"></a>Response 返回</h1><p>当我们ajax获取数据成功后会返回一个response对象，它包含了以下内容<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"comment\">// 服务器返回的数据</span></div><div class=\"line\">  data: &#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// HTTP状态吗</span></div><div class=\"line\">  status: <span class=\"number\">200</span>,</div><div class=\"line\">  <span class=\"comment\">// 服务器返回的消息</span></div><div class=\"line\">  statusText: <span class=\"string\">'OK'</span>,</div><div class=\"line\">  <span class=\"comment\">// 返回头</span></div><div class=\"line\">  headers: &#123;&#125;,</div><div class=\"line\">  <span class=\"comment\">// 在返回我们的配置</span></div><div class=\"line\">  config: &#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"统一Config配置\"><a href=\"#统一Config配置\" class=\"headerlink\" title=\"统一Config配置\"></a>统一Config配置</h1><p>在接口测试中，我们经常需要切换线上环境和测试环境，这里我们都可以通过Config来配置，这样我们所有的发起的请求都是通过这个基本的URL走了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://www.xxxx.xxx/api'</span>;</div><div class=\"line\"><span class=\"comment\">// axios.defaults.baseURL = 'http://192.168.1.129:8383';</span></div></pre></td></tr></table></figure>\n<h1 id=\"Interceptors-拦截器\"><a href=\"#Interceptors-拦截器\" class=\"headerlink\" title=\"Interceptors 拦截器\"></a>Interceptors 拦截器</h1><p>这里我必须重点介绍，在我们发起大量的请求时候，需要对请求做统一的处理那就用到它了。笔者在使用了<code>vue-resource</code>和<code>axios</code>之后亲身比较，<code>axios</code>的配置更加人性化。<br>官方的API上这样介绍</p>\n<blockquote>\n<p>You can intercept requests or responses before they are handled by then or catch.<br>您可以拦截请求或响应之前，他们处理的操作或者异常</p>\n</blockquote>\n<h2 id=\"request统一处理操作\"><a href=\"#request统一处理操作\" class=\"headerlink\" title=\"request统一处理操作\"></a>request统一处理操作</h2><p>如果是POST的请求，配置中可不能用<code>params</code>字段了，需要使用<code>data</code>字段。<br>这里有个小地方需要注意，POST的传参需要序列化，不然服务端不会正确的接收哦，会报错。所以这里我们要对request的数据进行一次序列化。这里我用了<code>qs</code>,大家需要install一下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   alert(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"response统一处理操作\"><a href=\"#response统一处理操作\" class=\"headerlink\" title=\"response统一处理操作\"></a>response统一处理操作</h2><p>也就是说我们可以统一的在发起请求前，或者获得数据，对其进行统一的操作。这点非常的高效，在笔者的项目中，接口会返回一个code,就和微信API一样，code为200代表返回请求数据正确为其它时就自动跳出弹窗打印消息即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    alert(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  alert(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>如果发生这些错误了我要结束当前的Promise所以返回一个<code>Promise.reject(res)</code>，停止Promise队列下面的操作,如果有对于Promise不熟悉的童鞋请自行搜索<code>Promise</code>(这里还遇到了一个小坑最后会介绍)</p>\n<h1 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的配置</h1><p>好了介绍了这么多介绍下我的axios配置的文件设置吧,这个文件名是<code>config/http.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'./whole'</span></div><div class=\"line\"></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">5000</span>;</div><div class=\"line\">axios.defaults.headers.post[<span class=\"string\">'Content-Type'</span>] = <span class=\"string\">'application/x-www-form-urlencoded;charset=UTF-8'</span>;</div><div class=\"line\">axios.defaults.baseURL = <span class=\"string\">'http://www.guinaben.com:8070'</span>;</div><div class=\"line\"><span class=\"comment\">// axios.defaults.baseURL = 'http://192.168.1.129:8383';</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//POST传参序列化</span></div><div class=\"line\">axios.interceptors.request.use(<span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(config.method  === <span class=\"string\">'post'</span>)&#123;</div><div class=\"line\">    config.data = qs.stringify(config.data);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;,(error) =&gt;&#123;</div><div class=\"line\">   _.toast(<span class=\"string\">\"错误的传参\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//code状态码200判断</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(res.data.code != <span class=\"string\">'200'</span>)&#123;</div><div class=\"line\">    _.toast(res.data.msg);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(res);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;, (error) =&gt; &#123;</div><div class=\"line\">  _.toast(<span class=\"string\">\"网络异常\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> axios;</div></pre></td></tr></table></figure></p>\n<p>发起的请求<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'config/http'</span></div><div class=\"line\"></div><div class=\"line\">axios(&#123;</div><div class=\"line\">  <span class=\"attr\">method</span>:<span class=\"string\">'get'</span>,</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">'xxxx/xxxxx'</span>,</div><div class=\"line\">  <span class=\"attr\">params</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"textbook_id\"</span>:id,</div><div class=\"line\">    <span class=\"string\">\"token\"</span>:token</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">  resolve(response);</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">axios(&#123;</div><div class=\"line\">  <span class=\"attr\">method</span>:<span class=\"string\">'post'</span>,</div><div class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">'teacher/pwd/resetByMobile'</span>,</div><div class=\"line\">  <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">   <span class=\"string\">\"textbook_id\"</span>:id,</div><div class=\"line\">    <span class=\"string\">\"token\"</span>:token</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</div><div class=\"line\">    resolve(response);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h1 id=\"一定要看\"><a href=\"#一定要看\" class=\"headerlink\" title=\"一定要看\"></a>一定要看</h1><p>因为这里我使用的<code>Promise</code>,所以在安卓4.4.3一下的手机还是不支持Promise的，所以会报错。需要引入<code>npm install babel-polyfill</code>和<code>npm install babel-runtime</code>，在入口文件上加上即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>下一篇将带来Vuex2和axios的配合，希望此篇能带给大家帮助。</p>\n"},{"title":"开博第一篇纪念","date":"2017-01-28T11:41:19.000Z","thumbnail":"http://okkula0y9.bkt.clouddn.com/hexo-logo.png","_content":"\n# 前言\n今天鸡年的第一天，说了好久想搭建自己的博客记录开发的日常，结果一拖再拖Orz（拖延症伤不起）。今天花了一下午终于搭建完成。\n\n## 使用技术\n1.Hexo\n前端建站神器，这里不多说了。[Hexo文档][1]\n\n2.主题\n当时在发现这个主题的时候是比较惊艳的，个人比较喜欢谷歌的这种风格，作者是位国人。很感谢无私的付出\n[Material Theme][2]\n\n3.Coding Pages\n本来打算使用Github Pages，有时候墙的厉害。使用[Coding Pages][3]做为承载网站。\n主要使用「用户 Pages」类型，在个人项目里新建一个名为 {user_name}.coding.me 的项目，然后将Hexo中生成的Public文件夹作为Git的主目录即可。\n\n\n## 踩坑\n1._config.yml 是全站的控制文件，在配置的时候，有时候稍不注意将下面代码前的空格删掉了运行就会报错。\n``` js\n//source前面有一个空格\nsource_dir: source\n```\n2.如果安装了新的主题，就需要到该主题下的_config.yml去配置。\n\n\n\n## 结尾\n新的一年，以此篇开始。Fighting~\n\n\n  [1]: https://hexo.io/zh-cn/docs/themes.html\n  [2]: https://material.viosey.com/\n  [3]: https://coding.net/help/doc/pages/index.html","source":"_posts/hello.md","raw":"---\ntitle: 开博第一篇纪念\ndate: 2017-01-28 19:41:19\ntags: [Hexo,博客]\nthumbnail: http://okkula0y9.bkt.clouddn.com/hexo-logo.png\n---\n\n# 前言\n今天鸡年的第一天，说了好久想搭建自己的博客记录开发的日常，结果一拖再拖Orz（拖延症伤不起）。今天花了一下午终于搭建完成。\n\n## 使用技术\n1.Hexo\n前端建站神器，这里不多说了。[Hexo文档][1]\n\n2.主题\n当时在发现这个主题的时候是比较惊艳的，个人比较喜欢谷歌的这种风格，作者是位国人。很感谢无私的付出\n[Material Theme][2]\n\n3.Coding Pages\n本来打算使用Github Pages，有时候墙的厉害。使用[Coding Pages][3]做为承载网站。\n主要使用「用户 Pages」类型，在个人项目里新建一个名为 {user_name}.coding.me 的项目，然后将Hexo中生成的Public文件夹作为Git的主目录即可。\n\n\n## 踩坑\n1._config.yml 是全站的控制文件，在配置的时候，有时候稍不注意将下面代码前的空格删掉了运行就会报错。\n``` js\n//source前面有一个空格\nsource_dir: source\n```\n2.如果安装了新的主题，就需要到该主题下的_config.yml去配置。\n\n\n\n## 结尾\n新的一年，以此篇开始。Fighting~\n\n\n  [1]: https://hexo.io/zh-cn/docs/themes.html\n  [2]: https://material.viosey.com/\n  [3]: https://coding.net/help/doc/pages/index.html","slug":"hello","published":1,"updated":"2017-01-30T06:08:45.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciympy1n60003m8psbkaohx55","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>今天鸡年的第一天，说了好久想搭建自己的博客记录开发的日常，结果一拖再拖Orz（拖延症伤不起）。今天花了一下午终于搭建完成。</p>\n<h2 id=\"使用技术\"><a href=\"#使用技术\" class=\"headerlink\" title=\"使用技术\"></a>使用技术</h2><p>1.Hexo<br>前端建站神器，这里不多说了。<a href=\"https://hexo.io/zh-cn/docs/themes.html\" target=\"_blank\" rel=\"external\">Hexo文档</a></p>\n<p>2.主题<br>当时在发现这个主题的时候是比较惊艳的，个人比较喜欢谷歌的这种风格，作者是位国人。很感谢无私的付出<br><a href=\"https://material.viosey.com/\" target=\"_blank\" rel=\"external\">Material Theme</a></p>\n<p>3.Coding Pages<br>本来打算使用Github Pages，有时候墙的厉害。使用<a href=\"https://coding.net/help/doc/pages/index.html\" target=\"_blank\" rel=\"external\">Coding Pages</a>做为承载网站。<br>主要使用「用户 Pages」类型，在个人项目里新建一个名为 {user_name}.coding.me 的项目，然后将Hexo中生成的Public文件夹作为Git的主目录即可。</p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>1._config.yml 是全站的控制文件，在配置的时候，有时候稍不注意将下面代码前的空格删掉了运行就会报错。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//source前面有一个空格</span></div><div class=\"line\">source_dir: source</div></pre></td></tr></table></figure></p>\n<p>2.如果安装了新的主题，就需要到该主题下的_config.yml去配置。</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>新的一年，以此篇开始。Fighting~</p>\n","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>今天鸡年的第一天，说了好久想搭建自己的博客记录开发的日常，结果一拖再拖Orz（拖延症伤不起）。今天花了一下午终于搭建完成。</p>\n<h2 id=\"使用技术\"><a href=\"#使用技术\" class=\"headerlink\" title=\"使用技术\"></a>使用技术</h2><p>1.Hexo<br>前端建站神器，这里不多说了。<a href=\"https://hexo.io/zh-cn/docs/themes.html\">Hexo文档</a></p>\n<p>2.主题<br>当时在发现这个主题的时候是比较惊艳的，个人比较喜欢谷歌的这种风格，作者是位国人。很感谢无私的付出<br><a href=\"https://material.viosey.com/\">Material Theme</a></p>\n<p>3.Coding Pages<br>本来打算使用Github Pages，有时候墙的厉害。使用<a href=\"https://coding.net/help/doc/pages/index.html\">Coding Pages</a>做为承载网站。<br>主要使用「用户 Pages」类型，在个人项目里新建一个名为 {user_name}.coding.me 的项目，然后将Hexo中生成的Public文件夹作为Git的主目录即可。</p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>1._config.yml 是全站的控制文件，在配置的时候，有时候稍不注意将下面代码前的空格删掉了运行就会报错。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//source前面有一个空格</span></div><div class=\"line\">source_dir: source</div></pre></td></tr></table></figure></p>\n<p>2.如果安装了新的主题，就需要到该主题下的_config.yml去配置。</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>新的一年，以此篇开始。Fighting~</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciympy1ml0000m8psh3cspiud","tag_id":"ciympy1my0002m8ps1hiv6q04","_id":"ciympy1ns0007m8pssig9gzys"},{"post_id":"ciympy1ml0000m8psh3cspiud","tag_id":"ciympy1nd0004m8ps6ds8lepl","_id":"ciympy1nt0008m8psai6k7tup"},{"post_id":"ciympy1ml0000m8psh3cspiud","tag_id":"ciympy1no0005m8ps4rmnuqgu","_id":"ciympy1nz000am8psq8sww8et"},{"post_id":"ciympy1ms0001m8psaxapjqcg","tag_id":"ciympy1nr0006m8pso8mx179i","_id":"ciympy1o2000cm8psaq635r6f"},{"post_id":"ciympy1ms0001m8psaxapjqcg","tag_id":"ciympy1nd0004m8ps6ds8lepl","_id":"ciympy1o3000dm8psl4pmxxq2"},{"post_id":"ciympy1n60003m8psbkaohx55","tag_id":"ciympy1o1000bm8ps9ywc33se","_id":"ciympy1o5000fm8psmf2iqyjb"},{"post_id":"ciympy1n60003m8psbkaohx55","tag_id":"ciympy1o4000em8ps377kpbr9","_id":"ciympy1o6000gm8psged072u4"}],"Tag":[{"name":"Vuex2","_id":"ciympy1my0002m8ps1hiv6q04"},{"name":"Vue","_id":"ciympy1nd0004m8ps6ds8lepl"},{"name":"Axios","_id":"ciympy1no0005m8ps4rmnuqgu"},{"name":"Axio","_id":"ciympy1nr0006m8pso8mx179i"},{"name":"Hexo","_id":"ciympy1o1000bm8ps9ywc33se"},{"name":"博客","_id":"ciympy1o4000em8ps377kpbr9"}]}}